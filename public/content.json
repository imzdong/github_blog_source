{"meta":{"title":"Winter","subtitle":null,"description":null,"author":"Winter","url":"https://imzdong.com","root":"/"},"pages":[{"title":"This is me","date":"2019-04-30T01:41:45.000Z","updated":"2019-05-08T06:04:01.749Z","comments":true,"path":"about/index.html","permalink":"https://imzdong.com/about/index.html","excerpt":"","text":"Winter 工作 帝都北漂小伙子！吃苦耐劳，Bug少。奋斗不止！生命不息！以财务自由为人生目标！加油！冲啊！ 爱好 篮球游戏海底捞！野球场上抗打能传耐盖帽，Lol荣耀Doublek呕猫司k呕Unbelievable！ 博客 博客 微博 微博"},{"title":"categories","date":"2019-04-30T01:37:58.000Z","updated":"2019-05-06T01:24:57.405Z","comments":true,"path":"categories/index.html","permalink":"https://imzdong.com/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2019-04-30T01:41:30.000Z","updated":"2019-05-07T07:15:18.626Z","comments":true,"path":"friends/index.html","permalink":"https://imzdong.com/friends/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-04-30T01:39:36.000Z","updated":"2019-05-06T01:24:57.408Z","comments":true,"path":"tags/index.html","permalink":"https://imzdong.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"最实用的Markdown教程","slug":"2019-04-29-Markdown","date":"2019-04-29T08:08:44.000Z","updated":"2019-05-08T06:52:11.894Z","comments":true,"path":"passages/2019-04-29-Markdown/","link":"","permalink":"https://imzdong.com/passages/2019-04-29-Markdown/","excerpt":"最近使用GitHub Pages搭建了自己的个人博客,特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。","text":"最近使用GitHub Pages搭建了自己的个人博客,特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。 最近使用GitHub Pages搭建了自己的个人博客,特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。 一、什么是Markdown？Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。说白了就是和Html语言一样，但是更加简化了。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档，更加简洁，更加符合人们的操作习惯。Markdown可以内嵌html语法 示例：Html的段落是&lt;p/&gt;,而Markdown就是一个或多个空行。html的标题&lt;h1/&gt;,而Markdown就是# 二、Markdown基本用法从大家写文章的习惯讲起吧！ 1、标题标题要区分于普通段落。Markdown的标题使用#可以表示1-6级标题。=一级标题，-二级标题（任何数量的=和-都可以有效果，最好三个及以上，比较直观）。示例： # 一级标题## 二级标题### 三级标题一级标题===========二级标题---------注意：’#’和标题中间要有空格，’=’或者’-‘在文字底 效果： 2、段落和换行一个Markdown段落的前后要有一个以上的空行。普通段落不该用空格或制表符来缩进。如果想在段前加缩进&amp;emsp;是一个中文字符,&amp;ensp;是半个中文字符&amp;nbsp;是1/4中文字符。换行在需要换行后面至少有两个以上的空格+回车。 注：不同的Markdown解释器段落和换行实现也不同，但基本上都是空行决定段落，空格+回车决定换行。多个&amp;emsp;、&amp;ensp;或者&amp;nbsp;表示缩进。 3、文字Markdown简化了Html，但是也丢失了一些字体的设置。注：使用其他字体的设置可以直接内嵌html语法示例： **加粗***斜体****斜体加粗***~~删除线~~ 效果： 加粗斜体斜体加粗删除线 内嵌html语法支持字体颜色:示例： &lt;font color=#FF0000 &gt;红色&lt;/font&gt;&lt;font color=#008000 &gt;绿色&lt;/font&gt;&lt;font color=#0000FF &gt;蓝色&lt;/font&gt; 效果： 红色绿色蓝色 4、引用一个或多个&gt;在引用文字前示例： &gt;引用&gt;&gt;引用&gt;&gt;&gt;引用 效果： 引用 引用 引用 5、分割线三个或者三个以上的 - 或者 * 都可以。示例： ---横线分割线***星分割线 效果： 横线分割线 星分割线 6、超链接示例： [超链接名](超链接地址 &quot;超链接title&quot;)title可加可不加[Winter的博客](https://imzdong.com)[百度](https://www.baidu.com) 效果： Winter的博客百度 7、图片超链接的加强版 ![图片名称](图片地址)![图片](/images/article/markdown/1.jpg) 效果： 8、列表有序列表（数字+.） 1. 我有一个梦想2. 我有两个梦想3. 我有三个梦想 效果： 我有一个梦想 我有两个梦想 我有三个梦想 无序列表(*、+、-) * 使用【星号】标识无序列表* 使用【星号】标识无序列表* 使用【星号】标识无序列表+ 使用【加号】标识无序列表+ 使用【加号】标识无序列表+ 使用【加号】标识无序列表- 使用【减号】标识无序列表- 使用【减号】标识无序列表- 使用【减号】标识无序列表 效果： 使用【星号】标识无序列表 使用【星号】标识无序列表 使用【星号】标识无序列表 使用【加号】标识无序列表 使用【加号】标识无序列表 使用【加号】标识无序列表 使用【减号】标识无序列表 使用【减号】标识无序列表 使用【减号】标识无序列表 注：有序列表和无序列表可以嵌套使用 9、表格语法： 表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容 第二行分割表头和内容。 - 有一个就行，为了对齐，多加了几个 文字默认居左 -两边加：表示文字居中 -右边加：表示文字居右 注：原生的语法两边都要用 | 包起来。此处省略 示例 第一格表头 | 第二格表头| 第三个表头---------| :-------------:|-----:内容单元格 第一列第一格 | 内容单元格第二列第一格(居中)|内容单元格第三列列第一格(居右)内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格(居中)|内容单元格第三列列第二格(居右)内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格(居中)|内容单元格第三列列第三格(居右)内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格(居中)|内容单元格第三列列第四格(居右) 效果： 第一格表头 第二格表头 第三个表头 内容单元格 第一列第一格 内容单元格第二列第一格(居中) 内容单元格第三列列第一格(居右) 内容单元格 第一列第二格 多加文字 内容单元格第二列第二格(居中) 内容单元格第三列列第二格(居右) 内容单元格 第一列第三格 多加文字 内容单元格第二列第三格(居中) 内容单元格第三列列第三格(居右) 内容单元格 第一列第四格 多加文字 内容单元格第二列第四格(居中) 内容单元格第三列列第四格(居右) 10、代码语法 单行代码：&lsquo;代码内容&rsquo;代码块：&lsquo;&lsquo;&lsquo;代码块内容&lsquo;&lsquo;&lsquo; 示例： &lsquo;com.winter&rsquo; 效果： com.winter123456789package com.winter;/** * Winter */public class Code &#123; public static void main(String[] args)throws Exception&#123; System.out.println(&quot;HelloWorld&quot;); &#125;&#125; 11、流程图Markdown的流程图是各个编辑器支持的不同，大家需要看各个编辑器的支持文档。我的博客使用的Hexo，Hexo常用的流程图插件： hexo-filter-mermaid-diagrams hexo-filter-flowchart GitHub hexo-filter-sequence GitHub 下面使用hexo-filter-mermaid-diagrams示例： &lsquo;&lsquo;&lsquo;mermaid graph TD; A–&gt;B; A–&gt;C; B–&gt;D; C–&gt;D; &lsquo;&lsquo;&lsquo; 效果： graph TD; A-->B; A-->C; B-->D; C-->D; 12、注意Markdown简化了用户的操作，所以复杂的、花里胡哨需要Markdown和内嵌的Html语句相结合（比如：字体颜色，字体大小等）。一些流程图、目录也需要借助于其他的插件或者编辑器。没有万能的简单的语法，大家相结合使用高效快速的完成博客文档的编辑。祝大家好运！","categories":[{"name":"技术","slug":"技术","permalink":"https://imzdong.com/categories/技术/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://imzdong.com/tags/Markdown/"}]},{"title":"两步完成GitHub搭建个人博客","slug":"2019-04-29-GithubPages","date":"2019-04-29T08:01:33.000Z","updated":"2019-05-07T02:40:56.874Z","comments":true,"path":"passages/2019-04-29-GithubPages/","link":"","permalink":"https://imzdong.com/passages/2019-04-29-GithubPages/","excerpt":"两步快速使用github搭建个人博客，借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+Hexo）","text":"两步快速使用github搭建个人博客，借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+Hexo） 一、为何要搭建个人博客？&emsp;&emsp;网上某大神说过“建站三阶段”（针对博客服务器及博客控制权区分）： 1、借助第三方平台，完全把控制权给第三方（比如博客园、CSDN、简书等平台） 2、自己搭建平台，博客服务器及博客控制权都自己来维护（阿里云+网站） 3、借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+Hexo） &emsp;&emsp;本人看后，微微一笑，双手赞成。本人已经经历了一二阶段。现在入坑第三阶段。谈谈自己的历程感受吧！第一阶段：限制太多，不够灵活(最主要广告贼多).第二阶段：太耗时，还耗钱。第三阶段：通过第三方平台，自己自定义网站模板，贼舒服。这次借助自己建站的机会写下此文。 二、GitHub搭建个人博客&emsp;&emsp;注：在建站之前你要在GitHub有账号。简单提一句：GitHub是通过git进行版本控制的的软件源代码托管服务。可以理解为就是一个云仓库，你可以通过git向仓库提交你想提交的任何文件。GitHub搭建的个人博客(本质也就是仓库) 1、创建仓库 2、仓库命名 2.1、注意空间名称以上二步操作完，，一个简单的个人博客基本上已经成功了。访问https://xxxx.github.io/我的https://imzdong.github.io/ 如果你本人首次操作的时候一定要遵循图片中的提示。老司机随意。最后会讲如果不按照图片提示操作会出现的情况 3、选择简单模板目前两大静态博客主流框架：Jekyll和Hexo 3.1、github默认主题Jekyll 3.2、Jekyll的几种主题 3.3、确认主题简单主题选择完后，再次访问你的网站https://xxxx.github.io/ 注意：以下是未按照我截图的仓库名称命名出现的问题 4、注意事项仓库名称随便起（比如：imzdong） 那需要访问 http://imzdong.github.io/imzdong 才能访问到我的网站访问 http://imzdong.github.io 是访问不到的 以上几步就可以简单的实现搭建简易博客了，祝各位好运！欢迎访问我的博客 参考Hexo中文文档Jekyll中文文档我的博客主题文档","categories":[{"name":"技术","slug":"技术","permalink":"https://imzdong.com/categories/技术/"}],"tags":[{"name":"GitHubPages","slug":"GitHubPages","permalink":"https://imzdong.com/tags/GitHubPages/"}]}]}