{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/ad/source/css/index.css","path":"css/index.css","modified":1,"renderable":1},{"_id":"themes/ad/source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/ad/source/images/wechat.jpg","path":"images/wechat.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/touch-icon.png","path":"images/touch-icon.png","modified":1,"renderable":1},{"_id":"themes/ad/source/js/auth.js","path":"js/auth.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/backTop.js","path":"js/backTop.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/copy.js","path":"js/copy.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/header.js","path":"js/header.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/index.js","path":"js/index.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/layer.js","path":"js/layer.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/leancloud.js","path":"js/leancloud.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/mathjax.js","path":"js/mathjax.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/passage.js","path":"js/passage.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/reward.js","path":"js/reward.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/scroll.js","path":"js/scroll.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/ad/source/js/time.js","path":"js/time.js","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/global.scss","path":"styles/global.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/index.scss","path":"styles/index.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/vendor/qrcode.min.js","path":"vendor/qrcode.min.js","modified":1,"renderable":1},{"_id":"themes/ad/source/vendor/sha256.min.js","path":"vendor/sha256.min.js","modified":1,"renderable":1},{"_id":"themes/ad/source/images/friends/godbmw.png","path":"images/friends/godbmw.png","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/bottom-bar.scss","path":"styles/components/bottom-bar.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/comment.scss","path":"styles/components/comment.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/index.scss","path":"styles/components/index.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/share.scss","path":"styles/components/share.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/toc.scss","path":"styles/components/toc.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/layer.scss","path":"styles/components/layer.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/layout/about.scss","path":"styles/layout/about.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/layout/friend.scss","path":"styles/layout/friend.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/layout/home.scss","path":"styles/layout/home.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/layout/index.scss","path":"styles/layout/index.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/layout/passage.scss","path":"styles/layout/passage.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/layout/set.scss","path":"styles/layout/set.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/layout/timeline.scss","path":"styles/layout/timeline.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/mixins/color.scss","path":"styles/mixins/color.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/mixins/font.scss","path":"styles/mixins/font.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/mixins/index.scss","path":"styles/mixins/index.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/partials/footer.scss","path":"styles/partials/footer.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/partials/header.scss","path":"styles/partials/header.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/partials/index.scss","path":"styles/partials/index.scss","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/about/1.jpg","path":"images/article/about/1.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/1.jpg","path":"images/article/github/1.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/10.jpg","path":"images/article/github/10.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/3.jpg","path":"images/article/github/3.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/4.jpg","path":"images/article/github/4.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/5.jpg","path":"images/article/github/5.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/introduction/语言图.jpg","path":"images/article/introduction/语言图.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/markdown/1.jpg","path":"images/article/markdown/1.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/markdown/3.jpg","path":"images/article/markdown/3.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/markdown/2.jpg","path":"images/article/markdown/2.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/highlight/diff.styl","path":"styles/components/highlight/diff.styl","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/highlight/theme.styl","path":"styles/components/highlight/theme.styl","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/highlight/highlight.styl","path":"styles/components/highlight/highlight.styl","modified":1,"renderable":1},{"_id":"themes/ad/source/styles/components/highlight/var.styl","path":"styles/components/highlight/var.styl","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/2.jpg","path":"images/article/github/2.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/6.jpg","path":"images/article/github/6.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/8.jpg","path":"images/article/github/8.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/9.jpg","path":"images/article/github/9.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/github/7.jpg","path":"images/article/github/7.jpg","modified":1,"renderable":1},{"_id":"themes/ad/source/images/article/introduction/对象导论.png","path":"images/article/introduction/对象导论.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1572264766259},{"_id":"themes/ad/.gitignore","hash":"c7a571bda2b8879c241d88ac59b4b9cad89162fb","modified":1572264178431},{"_id":"themes/ad/LICENSE","hash":"c292e4edae5045c54dbf31351442c1f09c8cffab","modified":1556523938798},{"_id":"themes/ad/README.cn.md","hash":"e7ee0c3bfdd86dfe74e7f178b35beb72fab12d17","modified":1557298855802},{"_id":"themes/ad/README.md","hash":"7ed009cc2cbc819e54aa1ab6e80b3e00bd1bc9f5","modified":1557298845130},{"_id":"themes/ad/_config.yml","hash":"289c4df0a113ea2f26f2dc449c45f560944bea5d","modified":1557105897410},{"_id":"themes/ad/package.json","hash":"7c208b353d74f8343650da8af4db3bb58dd39ce3","modified":1556523938849},{"_id":"source/_posts/2019-04-29-GithubPages.md","hash":"2049fd59a4a8ce91e998590fffa63c23fc60d503","modified":1557379266655},{"_id":"source/_posts/2019-04-29-Markdown.md","hash":"f59dd980f63b5c08d9bcb84bd9186782b89344cf","modified":1557379291779},{"_id":"source/_posts/2019-05-08-List.md","hash":"a87865dd5829ababe3a8b06d22bc9710804991e6","modified":1557316427289},{"_id":"source/_posts/2019-05-09-Data.md","hash":"b13d33b56eac343b210c944fbbeae27bb6e79ef8","modified":1559119144707},{"_id":"source/_posts/2019-05-09-MysqlSentence.md","hash":"daf1143764d6af9a9697ad7b01f3d998f8b2dce7","modified":1557364839069},{"_id":"source/_posts/2019-07-23-Common-tools.md","hash":"ff6f884748458c0d48b0b3b1a27db8498d1c2e54","modified":1563860919459},{"_id":"source/_posts/2019-07-23-Think-In-Java.md","hash":"4365147315e069134a69d514853a5f94f2a18b8b","modified":1564364170216},{"_id":"source/_posts/2019-07-26-Object-Introduction.md","hash":"856ff5233af46bc75b4657c7bb54c9c2c3b0d7c0","modified":1564364170217},{"_id":"source/about/index.md","hash":"58566884ff17dc9962d1af61192a3fce34ec17cf","modified":1557295441749},{"_id":"source/tags/index.md","hash":"a999ceb1051b547bbe5a5cd3725a590322c59222","modified":1557105897408},{"_id":"source/categories/index.md","hash":"691c51374cbe0088ffed2453fe72c4900f8f02f5","modified":1557105897405},{"_id":"source/friends/index.md","hash":"c052a3ca71583da5f7f2806ec96779142b68653f","modified":1557213318626},{"_id":"themes/ad/layout/about.ejs","hash":"9dced2092f1859dd24c139e3d4cc7f5e156ebe54","modified":1556523938806},{"_id":"themes/ad/layout/archive.ejs","hash":"96036e504c5af0085d31f4c316bb59d72ba5016a","modified":1556523938808},{"_id":"themes/ad/layout/categories.ejs","hash":"8240918393ad369871a37afd7162b9c661044f54","modified":1556523938810},{"_id":"themes/ad/layout/category.ejs","hash":"83954931702863f18e6c3597d2b63c73d620830a","modified":1556523938812},{"_id":"themes/ad/layout/layout.ejs","hash":"8597daaec8c2776c0256b9519432a1319ead2add","modified":1556523938833},{"_id":"themes/ad/layout/friends.ejs","hash":"57779a4a220843770e7d5bd32ca826c84738ebd9","modified":1556523938829},{"_id":"themes/ad/layout/index.ejs","hash":"bb74a78faa690e9fc53bd01aa3d76b0ee40eb50a","modified":1556523938831},{"_id":"themes/ad/layout/passage.ejs","hash":"28237cf25b2d9f1925285e89478e82056fc6b9c4","modified":1556523938841},{"_id":"themes/ad/layout/tag.ejs","hash":"6e269bb70bb4ef7bff1e1bd5fff7a39b6951b264","modified":1556523938845},{"_id":"themes/ad/layout/post.ejs","hash":"3d3fe8035784b29a48014be22080db7b7e4d9e1d","modified":1556523938843},{"_id":"themes/ad/layout/tags.ejs","hash":"9f705a56e3f52f567cbe5faba5db03166b51c595","modified":1556523938847},{"_id":"themes/ad/scripts/filter.js","hash":"1db2bbdd8ac924dc840919b88103e23de218e539","modified":1556523938852},{"_id":"themes/ad/layout/components/analytics.ejs","hash":"f2647d427786b9ecb2e0094caf7f9dc17235aa1f","modified":1556523938815},{"_id":"themes/ad/layout/components/bottom-bar.ejs","hash":"a46eba655cfba308e913e228db6b9aacf7fa855d","modified":1556523938817},{"_id":"themes/ad/layout/components/comment.ejs","hash":"7489b58da19132f326edb057550972b377502c77","modified":1556523938819},{"_id":"themes/ad/layout/components/config.ejs","hash":"9ed084e102797f5ab66fed5c72e8ae2f2873a50a","modified":1556523938821},{"_id":"themes/ad/layout/components/layer.ejs","hash":"25656990c36817885406fea694347241c414ba1f","modified":1556523938823},{"_id":"themes/ad/layout/components/share.ejs","hash":"16821ab79456d626bb28f41fab3e16e4e0aa27e5","modified":1556523938825},{"_id":"themes/ad/layout/components/toc.ejs","hash":"6876e4cb6c96a1f7e61a8b9a92dd7462d986dfa3","modified":1556523938827},{"_id":"themes/ad/layout/partials/footer.ejs","hash":"ac8470406884a28ccae75a264384d86672d70865","modified":1557297397811},{"_id":"themes/ad/layout/partials/head.ejs","hash":"3f3caf58385fc9ed981cd0ecfcc451101e88ea42","modified":1556523938837},{"_id":"themes/ad/layout/partials/header.ejs","hash":"eb1f6f9f1bccec82954f4c2f8c0b613f241feda2","modified":1556523938839},{"_id":"themes/ad/source/css/index.css","hash":"fbc8f6356c51eefd2497fdfbf2e691c03305ba27","modified":1556523938856},{"_id":"themes/ad/source/images/alipay.jpg","hash":"101b900fc7ac52fe0ed59d8ff1392febd070bd10","modified":1556519715388},{"_id":"themes/ad/source/images/favicon.ico","hash":"cc7c201861748e92f4809507096df74a40ef496a","modified":1556523938861},{"_id":"themes/ad/source/images/wechat.jpg","hash":"a955582cd53d891c4cf1c259377d165243b2300c","modified":1556519585050},{"_id":"themes/ad/source/images/touch-icon.png","hash":"df5a490c2e8d549ca767505fbe46eed3cbe3df43","modified":1556523938863},{"_id":"themes/ad/source/js/auth.js","hash":"2cc6c21f11605208e37df197b33900a8446afd22","modified":1556523938868},{"_id":"themes/ad/source/js/backTop.js","hash":"97e27c46ecccc9466e6f3960aee2f5d9d7d798c1","modified":1556523938870},{"_id":"themes/ad/source/js/copy.js","hash":"6261982ea52977d32c8e614fd3497e9463a46a48","modified":1556523938872},{"_id":"themes/ad/source/js/header.js","hash":"2822933e3cb850beffb4e0302c1992d31c71a660","modified":1556523938874},{"_id":"themes/ad/source/js/index.js","hash":"1cd70d29fd3ae533786e1f975e8f81abc761204a","modified":1556523938876},{"_id":"themes/ad/source/js/layer.js","hash":"3707269787b394384ce2f7c702ac68291080b52e","modified":1556523938878},{"_id":"themes/ad/source/js/leancloud.js","hash":"6d0ac74b58d14abb01ce877ed665d82ebe38a221","modified":1556523938880},{"_id":"themes/ad/source/js/mathjax.js","hash":"c27aabf00975f82f61578b7ee8a955434ac4b59e","modified":1556523938882},{"_id":"themes/ad/source/js/passage.js","hash":"0f1c3af060193f1b20570d6aa621e4e8e4dc4540","modified":1556523938884},{"_id":"themes/ad/source/js/reward.js","hash":"8617a075f46983abbf2fc97da252b0e5b32a060b","modified":1557105897430},{"_id":"themes/ad/source/js/scroll.js","hash":"4608e8e8225db4466f48c9323df2b92a6dd30308","modified":1556523938888},{"_id":"themes/ad/source/js/share.js","hash":"0ebf32492b4003043ac932cfa93b4a0684c6c3e4","modified":1556523938890},{"_id":"themes/ad/source/js/time.js","hash":"20ed993222688fba79881271f9766de743d812b8","modified":1556523938892},{"_id":"themes/ad/source/styles/global.scss","hash":"9e538136dd07cd53e284ffd0c4823711f57e62aa","modified":1556523938915},{"_id":"themes/ad/source/styles/index.scss","hash":"da04e6de16b4adc133a532aa5ac3e9e14615fb63","modified":1556523938917},{"_id":"themes/ad/source/vendor/qrcode.min.js","hash":"2d06c1f823f34c19981c6ae0b0eb0f5861c5e14b","modified":1556523938946},{"_id":"themes/ad/source/vendor/sha256.min.js","hash":"af29f33d895fae7571848f16a61dff5f87436698","modified":1556523938948},{"_id":"themes/ad/source/images/friends/godbmw.png","hash":"4742a2f020b5be1d9b12681faaeace8a7c91c570","modified":1557105897429},{"_id":"themes/ad/source/styles/components/bottom-bar.scss","hash":"98a8721da0b40542e337dd5b0c96e7f2801d1a50","modified":1556523938896},{"_id":"themes/ad/source/styles/components/comment.scss","hash":"f742e84c15b61d427f296a2737bb1390f3ec2e02","modified":1556523938898},{"_id":"themes/ad/source/styles/components/index.scss","hash":"d09f2bdb08bcf6140b8534555d2094d6d3fecc75","modified":1556523938908},{"_id":"themes/ad/source/styles/components/share.scss","hash":"7ad434a4105217f0e71243c8f7f41f6b3e72b596","modified":1556523938911},{"_id":"themes/ad/source/styles/components/toc.scss","hash":"8cd3de30af7323ce2f075af295c663962ee3b085","modified":1556523938913},{"_id":"themes/ad/source/styles/components/layer.scss","hash":"45f9b72ccb463f4f794c01b3a2f208a2c41add3e","modified":1556523938910},{"_id":"themes/ad/source/styles/layout/about.scss","hash":"a837702e46ab42b493c7912a19a0f63f3d50fc40","modified":1556523938920},{"_id":"themes/ad/source/styles/layout/friend.scss","hash":"021557fd8020cdfb856a035a22c32f9317a04805","modified":1556523938922},{"_id":"themes/ad/source/styles/layout/home.scss","hash":"543da041dff4a777f4e776e285d161db6206426d","modified":1556523938924},{"_id":"themes/ad/source/styles/layout/index.scss","hash":"a58ff741da8ebe7da5951e9fc3eb95e3768c8807","modified":1556523938925},{"_id":"themes/ad/source/styles/layout/passage.scss","hash":"bf60fd47c44c42f07509a52fbe130b7fbd631823","modified":1556523938927},{"_id":"themes/ad/source/styles/layout/set.scss","hash":"0c8618365352cf0bbcbdbcb55d0caa04c5c4b8dd","modified":1556523938929},{"_id":"themes/ad/source/styles/layout/timeline.scss","hash":"544236379754bda1619466f4cc6628b5a029217a","modified":1556523938931},{"_id":"themes/ad/source/styles/mixins/color.scss","hash":"de70a6e9aeca811654763d8f6e6f47e30391f241","modified":1556523938933},{"_id":"themes/ad/source/styles/mixins/font.scss","hash":"a4781d617c70046b275e2778461ef205234cbc72","modified":1556523938935},{"_id":"themes/ad/source/styles/mixins/index.scss","hash":"4e4df34ca0b636537a51261106de8f29129373cb","modified":1556523938936},{"_id":"themes/ad/source/styles/partials/footer.scss","hash":"d557a106dd0415e57bb922b7256b091b9478665b","modified":1556523938939},{"_id":"themes/ad/source/styles/partials/header.scss","hash":"852ba12ad3bf3e75f4206d38b5753da590ba9039","modified":1556523938941},{"_id":"themes/ad/source/styles/partials/index.scss","hash":"91534b734b276d4fb16be9e9552fc2b4f906ea8f","modified":1556523938943},{"_id":"themes/ad/source/images/article/about/1.jpg","hash":"cb9553472e1a40b1a702159acf9ae344d3db10e6","modified":1557215491957},{"_id":"themes/ad/source/images/article/github/1.jpg","hash":"a20facabbf4fde12dff4ec3d56bdf1bacad16a70","modified":1557105897412},{"_id":"themes/ad/source/images/article/github/10.jpg","hash":"d053cad22e626501417a058d1f9a1595423ca73b","modified":1557105897414},{"_id":"themes/ad/source/images/article/github/3.jpg","hash":"c45fd972232521b6e201eb8de91d800336156559","modified":1557105897417},{"_id":"themes/ad/source/images/article/github/4.jpg","hash":"2cf129bc8de1f5feaaf6340db305d683471702ed","modified":1557105897418},{"_id":"themes/ad/source/images/article/github/5.jpg","hash":"8617586034e5993e27cbb9fd2637fdd9df4cf7d0","modified":1557105897420},{"_id":"themes/ad/source/images/article/introduction/语言图.jpg","hash":"586887cb9928e7826145cce83a56f04359d1faab","modified":1572263539324},{"_id":"themes/ad/source/images/article/markdown/1.jpg","hash":"70c50eb98b6391cc3149377dc73a9a406a18cd3a","modified":1557207810861},{"_id":"themes/ad/source/images/article/markdown/3.jpg","hash":"3d2e1fff584c99eb35ec83278d0a8f292e03faeb","modified":1557210045523},{"_id":"themes/ad/source/images/article/markdown/2.jpg","hash":"aec4a58de2b23c0bb6a33799a24642f36110b771","modified":1557196312535},{"_id":"themes/ad/source/styles/components/highlight/diff.styl","hash":"28da2a9cca87ca3fad88ef625aa68d7e422838cb","modified":1556523938900},{"_id":"themes/ad/source/styles/components/highlight/theme.styl","hash":"a17f33ea2fea10260118004dc68e1946085a5e4a","modified":1556523938904},{"_id":"themes/ad/source/styles/components/highlight/highlight.styl","hash":"83627272f4d54f952765cd2e2cd6994e3fbf3d66","modified":1556523938902},{"_id":"themes/ad/source/styles/components/highlight/var.styl","hash":"f397024eb66bb042624e0df43a5b406631501277","modified":1556523938906},{"_id":"themes/ad/source/images/article/github/2.jpg","hash":"2f2ecdd989ff21e60b605db4cbffbda1081f7c5d","modified":1557105897415},{"_id":"themes/ad/source/images/article/github/6.jpg","hash":"62f8d4250b85561dcb84ddc24bdc056d077d039c","modified":1557105897421},{"_id":"themes/ad/source/images/article/github/8.jpg","hash":"bada5964f136f46146de5d05a7dd71967f99f653","modified":1557105897425},{"_id":"themes/ad/source/images/article/github/9.jpg","hash":"4c2de18f429c907e44eb262f270ac9dd10323eaa","modified":1557105897427},{"_id":"themes/ad/source/images/article/github/7.jpg","hash":"ad7253a8106f7a959b9c2184a78f41cbc8dfccdf","modified":1557105897423},{"_id":"themes/ad/source/images/article/introduction/对象导论.png","hash":"e533b4e68db11a9be29b4a5c580b72db904bafec","modified":1572263539322},{"_id":"public/content.json","hash":"f3321546aaeddd936c666a6625b50a29972e42f3","modified":1572268063153},{"_id":"public/about/index.html","hash":"d253fd9581e84d7b04e7a774b91a11d8c8769033","modified":1572268063327},{"_id":"public/friends/index.html","hash":"86fb1d3477cf27934617e6dd0b639f8dee9587c6","modified":1572268063327},{"_id":"public/tags/index.html","hash":"44d7f821489706025a469fb0af1083be6d2e1843","modified":1572268063327},{"_id":"public/categories/index.html","hash":"dc4c53e798b61588152ae9647c46e12d780f3093","modified":1572268063328},{"_id":"public/passages/2019-07-26-Object-Introduction/index.html","hash":"5d173a8d07959856a6aa3313bc322b491b3ff381","modified":1572268063328},{"_id":"public/passages/2019-07-23-Common-tools/index.html","hash":"6e60361e07bb3264bce57141314ded189a0f1dc4","modified":1572268063328},{"_id":"public/passages/2019-05-09-MysqlSentence/index.html","hash":"98ba3fb9a60fcf245b4db0086a2168e2c57e3ce1","modified":1572268063328},{"_id":"public/passages/2019-05-09-Data/index.html","hash":"a42a8dd127b982b0222055a0dde97fe615559346","modified":1572268063328},{"_id":"public/passages/2019-05-08-List/index.html","hash":"2742dc15e62839608698a4d61461452a31b64f81","modified":1572268063328},{"_id":"public/archives/index.html","hash":"35aab8d32268153f9ef0a8d81483ff2447f1b868","modified":1572268063328},{"_id":"public/archives/2019/index.html","hash":"7032ead541923bd488eb9d3e1611d997df87bda1","modified":1572268063328},{"_id":"public/archives/2019/04/index.html","hash":"8079f00637ca860156b1898a9a56753122e481c2","modified":1572268063329},{"_id":"public/archives/2019/05/index.html","hash":"4c944a285f823a9de8b341890338a633cdcdb5e9","modified":1572268063329},{"_id":"public/archives/2019/07/index.html","hash":"a8c31f98c22a23c3890d573e8843f3c33edef81d","modified":1572268063329},{"_id":"public/categories/技术/index.html","hash":"a2aeeae2a1f99295fb51892ed841a7384653b754","modified":1572268063329},{"_id":"public/tags/GitHubPages/index.html","hash":"05b0f8b65c94c843f5602dc058fc0441030787b8","modified":1572268063329},{"_id":"public/tags/Java/index.html","hash":"ce8602def777760fa79b6e3e615a36d625aa9c33","modified":1572268063329},{"_id":"public/tags/Markdown/index.html","hash":"0c7ef96869ab350d51aa09aea63cf1dc46216a0d","modified":1572268063329},{"_id":"public/passages/2019-07-23-Think-In-Java/index.html","hash":"5ecf58c8d4a0daf74a9338fc7edd96a96cd9c41b","modified":1572268063329},{"_id":"public/passages/2019-04-29-Markdown/index.html","hash":"f96a9f0b9628dd252ed26f65dd98349f0ecce349","modified":1572268063329},{"_id":"public/passages/2019-04-29-GithubPages/index.html","hash":"ee7d07bd54899eabfc8575593a1d1101030b1a13","modified":1572268063329},{"_id":"public/index.html","hash":"fbe6231fba7b30c49ff9091d6529e6048708b742","modified":1572268063329},{"_id":"public/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1572268063335},{"_id":"public/images/favicon.ico","hash":"cc7c201861748e92f4809507096df74a40ef496a","modified":1572268063340},{"_id":"public/images/touch-icon.png","hash":"df5a490c2e8d549ca767505fbe46eed3cbe3df43","modified":1572268063340},{"_id":"public/styles/global.scss","hash":"9e538136dd07cd53e284ffd0c4823711f57e62aa","modified":1572268063340},{"_id":"public/styles/index.scss","hash":"da04e6de16b4adc133a532aa5ac3e9e14615fb63","modified":1572268063340},{"_id":"public/styles/components/bottom-bar.scss","hash":"98a8721da0b40542e337dd5b0c96e7f2801d1a50","modified":1572268063340},{"_id":"public/images/friends/godbmw.png","hash":"4742a2f020b5be1d9b12681faaeace8a7c91c570","modified":1572268063340},{"_id":"public/styles/components/comment.scss","hash":"f742e84c15b61d427f296a2737bb1390f3ec2e02","modified":1572268063341},{"_id":"public/styles/components/index.scss","hash":"d09f2bdb08bcf6140b8534555d2094d6d3fecc75","modified":1572268063341},{"_id":"public/styles/components/share.scss","hash":"7ad434a4105217f0e71243c8f7f41f6b3e72b596","modified":1572268063341},{"_id":"public/styles/components/toc.scss","hash":"8cd3de30af7323ce2f075af295c663962ee3b085","modified":1572268063341},{"_id":"public/styles/components/layer.scss","hash":"45f9b72ccb463f4f794c01b3a2f208a2c41add3e","modified":1572268063341},{"_id":"public/styles/layout/about.scss","hash":"a837702e46ab42b493c7912a19a0f63f3d50fc40","modified":1572268063341},{"_id":"public/styles/layout/home.scss","hash":"543da041dff4a777f4e776e285d161db6206426d","modified":1572268063341},{"_id":"public/styles/layout/friend.scss","hash":"021557fd8020cdfb856a035a22c32f9317a04805","modified":1572268063341},{"_id":"public/styles/layout/index.scss","hash":"a58ff741da8ebe7da5951e9fc3eb95e3768c8807","modified":1572268063341},{"_id":"public/styles/layout/passage.scss","hash":"bf60fd47c44c42f07509a52fbe130b7fbd631823","modified":1572268063341},{"_id":"public/styles/layout/timeline.scss","hash":"544236379754bda1619466f4cc6628b5a029217a","modified":1572268063341},{"_id":"public/styles/layout/set.scss","hash":"0c8618365352cf0bbcbdbcb55d0caa04c5c4b8dd","modified":1572268063341},{"_id":"public/styles/mixins/color.scss","hash":"de70a6e9aeca811654763d8f6e6f47e30391f241","modified":1572268063341},{"_id":"public/styles/mixins/font.scss","hash":"a4781d617c70046b275e2778461ef205234cbc72","modified":1572268063341},{"_id":"public/styles/mixins/index.scss","hash":"4e4df34ca0b636537a51261106de8f29129373cb","modified":1572268063341},{"_id":"public/styles/partials/footer.scss","hash":"d557a106dd0415e57bb922b7256b091b9478665b","modified":1572268063341},{"_id":"public/styles/partials/header.scss","hash":"852ba12ad3bf3e75f4206d38b5753da590ba9039","modified":1572268063341},{"_id":"public/styles/partials/index.scss","hash":"91534b734b276d4fb16be9e9552fc2b4f906ea8f","modified":1572268063342},{"_id":"public/images/article/about/1.jpg","hash":"cb9553472e1a40b1a702159acf9ae344d3db10e6","modified":1572268063342},{"_id":"public/images/article/github/1.jpg","hash":"a20facabbf4fde12dff4ec3d56bdf1bacad16a70","modified":1572268063342},{"_id":"public/images/article/github/10.jpg","hash":"d053cad22e626501417a058d1f9a1595423ca73b","modified":1572268063342},{"_id":"public/images/article/github/3.jpg","hash":"c45fd972232521b6e201eb8de91d800336156559","modified":1572268063342},{"_id":"public/images/article/github/4.jpg","hash":"2cf129bc8de1f5feaaf6340db305d683471702ed","modified":1572268063342},{"_id":"public/images/article/github/5.jpg","hash":"8617586034e5993e27cbb9fd2637fdd9df4cf7d0","modified":1572268063342},{"_id":"public/images/article/markdown/1.jpg","hash":"70c50eb98b6391cc3149377dc73a9a406a18cd3a","modified":1572268063342},{"_id":"public/images/article/introduction/语言图.jpg","hash":"586887cb9928e7826145cce83a56f04359d1faab","modified":1572268063342},{"_id":"public/images/article/markdown/3.jpg","hash":"3d2e1fff584c99eb35ec83278d0a8f292e03faeb","modified":1572268063342},{"_id":"public/images/article/markdown/2.jpg","hash":"aec4a58de2b23c0bb6a33799a24642f36110b771","modified":1572268063342},{"_id":"public/images/wechat.jpg","hash":"a955582cd53d891c4cf1c259377d165243b2300c","modified":1572268063597},{"_id":"public/images/article/github/2.jpg","hash":"2f2ecdd989ff21e60b605db4cbffbda1081f7c5d","modified":1572268063598},{"_id":"public/images/article/github/6.jpg","hash":"62f8d4250b85561dcb84ddc24bdc056d077d039c","modified":1572268063598},{"_id":"public/images/article/github/9.jpg","hash":"4c2de18f429c907e44eb262f270ac9dd10323eaa","modified":1572268063598},{"_id":"public/images/article/github/8.jpg","hash":"bada5964f136f46146de5d05a7dd71967f99f653","modified":1572268063599},{"_id":"public/images/article/github/7.jpg","hash":"ad7253a8106f7a959b9c2184a78f41cbc8dfccdf","modified":1572268063599},{"_id":"public/js/copy.js","hash":"902fe6c84d2ebbfb37e1f91f37646bea20db8c05","modified":1572268063605},{"_id":"public/js/auth.js","hash":"65833588caa77be788aea02fc87e1eaeda55694a","modified":1572268063605},{"_id":"public/js/backTop.js","hash":"237a50a872e2fe8343353bbe18fabb3c1681f0d0","modified":1572268063605},{"_id":"public/js/layer.js","hash":"dc17348c7bef8a78f9a258d2f25864853ee4a576","modified":1572268063605},{"_id":"public/js/header.js","hash":"c758cb821ed923f45fae608d333c6935adc38f3d","modified":1572268063605},{"_id":"public/js/index.js","hash":"2575e6a1cd7d30e006862bedbefc034220401da0","modified":1572268063605},{"_id":"public/js/mathjax.js","hash":"3c58ffe041c6e124c5d927d0e7127659b562cfd8","modified":1572268063605},{"_id":"public/js/leancloud.js","hash":"e91b45003ab747ca9162f83d033a572b00c86be5","modified":1572268063605},{"_id":"public/js/share.js","hash":"4fcb58fe1d5332cb59f3d559401231ba8106ee2b","modified":1572268063605},{"_id":"public/js/reward.js","hash":"110f3cd754b25a9a140428989958b86f39385ad7","modified":1572268063605},{"_id":"public/js/passage.js","hash":"cff41ceccdeefb44473d0b928c8c7f695502896a","modified":1572268063606},{"_id":"public/js/time.js","hash":"4b86b54eea0bbdd8870af6c70443b852393c457b","modified":1572268063606},{"_id":"public/js/scroll.js","hash":"938dd852f6ac214f8ad0135fce7a8b126c36ef7c","modified":1572268063606},{"_id":"public/vendor/sha256.min.js","hash":"3c5ff30e1f6d37786a336c407defaf5bb7bb258a","modified":1572268063606},{"_id":"public/styles/components/highlight/diff.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1572268063606},{"_id":"public/styles/components/highlight/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1572268063606},{"_id":"public/styles/components/highlight/theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1572268063606},{"_id":"public/styles/components/highlight/highlight.css","hash":"ee9a7e3f39fb6a0ae47943d2ea958674619ff47c","modified":1572268063606},{"_id":"public/images/alipay.jpg","hash":"101b900fc7ac52fe0ed59d8ff1392febd070bd10","modified":1572268063606},{"_id":"public/images/article/introduction/对象导论.png","hash":"e533b4e68db11a9be29b4a5c580b72db904bafec","modified":1572268063622},{"_id":"public/vendor/qrcode.min.js","hash":"2d06c1f823f34c19981c6ae0b0eb0f5861c5e14b","modified":1572268063628},{"_id":"public/css/index.css","hash":"1b26e6c669581e76df2337062f0c13d3a4c97d23","modified":1572268063636}],"Category":[{"name":"技术","_id":"ck2aft5k10002uwtktkmq515u"}],"Data":[],"Page":[{"title":"This is me","date":"2019-04-30T01:41:45.000Z","type":"about","_content":"\nWinter | <img src=\"/images/article/about/1.jpg\" width=\"300\" hegiht=\"250\" align=center />\n---------| :-------------:\n工作 | 帝都北漂小伙子！吃苦耐劳，Bug少。奋斗不止！生命不息！以财务自由为人生目标！加油！冲啊！\n爱好 | 篮球游戏海底捞！野球场上抗打能传耐盖帽，Lol荣耀Doublek呕猫司k呕Unbelievable！\n博客 | [博客](https://blog.csdn.net/u012540337)\n微博 | [微博](https://weibo.com/u/5157581753)","source":"about/index.md","raw":"---\ntitle: This is me\ndate: 2019-04-30 09:41:45\ntype: \"about\" # 必须显式设置为\"about\"\n---\n\nWinter | <img src=\"/images/article/about/1.jpg\" width=\"300\" hegiht=\"250\" align=center />\n---------| :-------------:\n工作 | 帝都北漂小伙子！吃苦耐劳，Bug少。奋斗不止！生命不息！以财务自由为人生目标！加油！冲啊！\n爱好 | 篮球游戏海底捞！野球场上抗打能传耐盖帽，Lol荣耀Doublek呕猫司k呕Unbelievable！\n博客 | [博客](https://blog.csdn.net/u012540337)\n微博 | [微博](https://weibo.com/u/5157581753)","updated":"2019-05-08T06:04:01.749Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck2aft5ko000luwtkq8khu90e","content":"<table>\n<thead>\n<tr>\n<th>Winter</th>\n<th style=\"text-align:center\"><img src=\"/images/article/about/1.jpg\" width=\"300\" hegiht=\"250\" align=\"center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>工作</td>\n<td style=\"text-align:center\">帝都北漂小伙子！吃苦耐劳，Bug少。奋斗不止！生命不息！以财务自由为人生目标！加油！冲啊！</td>\n</tr>\n<tr>\n<td>爱好</td>\n<td style=\"text-align:center\">篮球游戏海底捞！野球场上抗打能传耐盖帽，Lol荣耀Doublek呕猫司k呕Unbelievable！</td>\n</tr>\n<tr>\n<td>博客</td>\n<td style=\"text-align:center\"><a href=\"https://blog.csdn.net/u012540337\">博客</a></td>\n</tr>\n<tr>\n<td>微博</td>\n<td style=\"text-align:center\"><a href=\"https://weibo.com/u/5157581753\">微博</a></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th>Winter</th>\n<th style=\"text-align:center\"><img src=\"/images/article/about/1.jpg\" width=\"300\" hegiht=\"250\" align=\"center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>工作</td>\n<td style=\"text-align:center\">帝都北漂小伙子！吃苦耐劳，Bug少。奋斗不止！生命不息！以财务自由为人生目标！加油！冲啊！</td>\n</tr>\n<tr>\n<td>爱好</td>\n<td style=\"text-align:center\">篮球游戏海底捞！野球场上抗打能传耐盖帽，Lol荣耀Doublek呕猫司k呕Unbelievable！</td>\n</tr>\n<tr>\n<td>博客</td>\n<td style=\"text-align:center\"><a href=\"https://blog.csdn.net/u012540337\">博客</a></td>\n</tr>\n<tr>\n<td>微博</td>\n<td style=\"text-align:center\"><a href=\"https://weibo.com/u/5157581753\">微博</a></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"friends","date":"2019-04-30T01:41:30.000Z","type":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2019-04-30 09:41:30\ntype: \"friends\" # 必须显式设置为\"friends\"\n---\n","updated":"2019-05-07T07:15:18.626Z","path":"friends/index.html","comments":1,"layout":"page","_id":"ck2aft5kr000nuwtk50myf7jr","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2019-04-30T01:39:36.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-04-30 09:39:36\ntype: \"tags\" # 必须显式设置为\"tags\"\n---\n","updated":"2019-05-06T01:24:57.408Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck2aft5ks000puwtkbfzw9jsc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2019-04-30T01:37:58.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-04-30 09:37:58\ntype: \"categories\" # 必须显式设置为\"categories\"\n---\n","updated":"2019-05-06T01:24:57.405Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck2aft5ku000suwtklaidqnc0","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"两步完成GitHub搭建个人博客","date":"2019-04-29T08:01:33.000Z","_content":"\n两步快速使用github搭建个人博客，借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+[Hexo](https://hexo.io/zh-cn/docs/index.html)）\n<!-- more -->\n### 一、为何要搭建个人博客？\n&emsp;&emsp;网上某大神说过“建站三阶段”（针对博客服务器及博客控制权区分）：\n> + 1、借助第三方平台，完全把控制权给第三方（比如博客园、CSDN、简书等平台）\n> - 2、自己搭建平台，博客服务器及博客控制权都自己来维护（阿里云+网站）\n> + 3、借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+[Hexo](https://hexo.io/zh-cn/docs/index.html)）\n\n&emsp;&emsp;本人看后，微微一笑，双手赞成。本人已经经历了一二阶段。现在入坑第三阶段。谈谈自己的历程感受吧！**第一阶段：限制太多，不够灵活(最主要广告贼多).第二阶段：太耗时，还耗钱。第三阶段：通过第三方平台，自己自定义网站模板，贼舒服。**这次借助自己建站的机会写下此文。\n### 二、GitHub搭建个人博客\n&emsp;&emsp;注：在建站之前你要在[GitHub](https://github.com/)有账号。简单提一句：[GitHub](https://github.com/)是通过git进行版本控制的的软件源代码托管服务。可以理解为就是一个云仓库，你可以通过git向仓库提交你想提交的任何文件。\n**GitHub搭建的个人博客(本质也就是仓库)**\n##### 1、创建仓库\n![创建仓库](/images/article/github/1.jpg)\n##### 2、仓库命名\n![创建仓库](/images/article/github/2.jpg)\n###### 2.1、注意空间名称\n![创建仓库](/images/article/github/3.jpg)\n以上二步操作完，，一个简单的个人博客基本上已经成功了。访问https://xxxx.github.io/\n我的https://imzdong.github.io/\n![成功](/images/article/github/4.jpg)\n> 如果你本人首次操作的时候一定要遵循图片中的提示。老司机随意。最后会讲如果不按照图片提示操作会出现的情况\n##### 3、选择简单模板\n![简单模板](/images/article/github/5.jpg)\n目前两大静态博客主流框架：[Jekyll](http://jekyllcn.com/)和[Hexo](https://hexo.io/zh-cn/)\n###### 3.1、github默认主题[Jekyll](http://jekyllcn.com/)\n![简单模板](/images/article/github/6.jpg)\n###### 3.2、[Jekyll](http://jekyllcn.com/)的几种主题\n![简单模板主题](/images/article/github/7.jpg)\n###### 3.3、确认主题\n简单主题选择完后，再次访问你的网站https://xxxx.github.io/\n![简单模板](/images/article/github/8.jpg)\n> 注意：**以下是未按照我截图的仓库名称命名出现的问题**\n\n##### 4、注意事项\n仓库名称随便起（比如：imzdong） 那需要访问 http://imzdong.github.io/imzdong 才能访问到我的网站\n访问 http://imzdong.github.io  是访问不到的\n![简单模板](/images/article/github/9.jpg)\n![简单模板](/images/article/github/10.jpg)\n\n以上几步就可以简单的实现搭建简易博客了，祝各位好运！欢迎访问[我的博客](https://imzdong.github.io/)\n> ##### 参考\n[Hexo中文文档](https://hexo.io/zh-cn/docs/index.html)\n[Jekyll中文文档](http://jekyllcn.com/)\n[我的博客主题文档](https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/)","source":"_posts/2019-04-29-GithubPages.md","raw":"---\ntitle: 两步完成GitHub搭建个人博客\ndate: 2019-04-29 16:01:33\ncategories: \n- 技术\ntags:\n- GitHubPages\n---\n\n两步快速使用github搭建个人博客，借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+[Hexo](https://hexo.io/zh-cn/docs/index.html)）\n<!-- more -->\n### 一、为何要搭建个人博客？\n&emsp;&emsp;网上某大神说过“建站三阶段”（针对博客服务器及博客控制权区分）：\n> + 1、借助第三方平台，完全把控制权给第三方（比如博客园、CSDN、简书等平台）\n> - 2、自己搭建平台，博客服务器及博客控制权都自己来维护（阿里云+网站）\n> + 3、借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+[Hexo](https://hexo.io/zh-cn/docs/index.html)）\n\n&emsp;&emsp;本人看后，微微一笑，双手赞成。本人已经经历了一二阶段。现在入坑第三阶段。谈谈自己的历程感受吧！**第一阶段：限制太多，不够灵活(最主要广告贼多).第二阶段：太耗时，还耗钱。第三阶段：通过第三方平台，自己自定义网站模板，贼舒服。**这次借助自己建站的机会写下此文。\n### 二、GitHub搭建个人博客\n&emsp;&emsp;注：在建站之前你要在[GitHub](https://github.com/)有账号。简单提一句：[GitHub](https://github.com/)是通过git进行版本控制的的软件源代码托管服务。可以理解为就是一个云仓库，你可以通过git向仓库提交你想提交的任何文件。\n**GitHub搭建的个人博客(本质也就是仓库)**\n##### 1、创建仓库\n![创建仓库](/images/article/github/1.jpg)\n##### 2、仓库命名\n![创建仓库](/images/article/github/2.jpg)\n###### 2.1、注意空间名称\n![创建仓库](/images/article/github/3.jpg)\n以上二步操作完，，一个简单的个人博客基本上已经成功了。访问https://xxxx.github.io/\n我的https://imzdong.github.io/\n![成功](/images/article/github/4.jpg)\n> 如果你本人首次操作的时候一定要遵循图片中的提示。老司机随意。最后会讲如果不按照图片提示操作会出现的情况\n##### 3、选择简单模板\n![简单模板](/images/article/github/5.jpg)\n目前两大静态博客主流框架：[Jekyll](http://jekyllcn.com/)和[Hexo](https://hexo.io/zh-cn/)\n###### 3.1、github默认主题[Jekyll](http://jekyllcn.com/)\n![简单模板](/images/article/github/6.jpg)\n###### 3.2、[Jekyll](http://jekyllcn.com/)的几种主题\n![简单模板主题](/images/article/github/7.jpg)\n###### 3.3、确认主题\n简单主题选择完后，再次访问你的网站https://xxxx.github.io/\n![简单模板](/images/article/github/8.jpg)\n> 注意：**以下是未按照我截图的仓库名称命名出现的问题**\n\n##### 4、注意事项\n仓库名称随便起（比如：imzdong） 那需要访问 http://imzdong.github.io/imzdong 才能访问到我的网站\n访问 http://imzdong.github.io  是访问不到的\n![简单模板](/images/article/github/9.jpg)\n![简单模板](/images/article/github/10.jpg)\n\n以上几步就可以简单的实现搭建简易博客了，祝各位好运！欢迎访问[我的博客](https://imzdong.github.io/)\n> ##### 参考\n[Hexo中文文档](https://hexo.io/zh-cn/docs/index.html)\n[Jekyll中文文档](http://jekyllcn.com/)\n[我的博客主题文档](https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/)","slug":"2019-04-29-GithubPages","published":1,"updated":"2019-05-09T05:21:06.655Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2aft5jv0000uwtk492dbwzh","content":"<p>两步快速使用github搭建个人博客，借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+<a href=\"https://hexo.io/zh-cn/docs/index.html\">Hexo</a>）<br><a id=\"more\"></a></p>\n<h3 id=\"一、为何要搭建个人博客？\"><a href=\"#一、为何要搭建个人博客？\" class=\"headerlink\" title=\"一、为何要搭建个人博客？\"></a>一、为何要搭建个人博客？</h3><p>&emsp;&emsp;网上某大神说过“建站三阶段”（针对博客服务器及博客控制权区分）：</p>\n<blockquote>\n<ul>\n<li>1、借助第三方平台，完全把控制权给第三方（比如博客园、CSDN、简书等平台）</li>\n</ul>\n<ul>\n<li>2、自己搭建平台，博客服务器及博客控制权都自己来维护（阿里云+网站）</li>\n</ul>\n<ul>\n<li>3、借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+<a href=\"https://hexo.io/zh-cn/docs/index.html\">Hexo</a>）</li>\n</ul>\n</blockquote>\n<p>&emsp;&emsp;本人看后，微微一笑，双手赞成。本人已经经历了一二阶段。现在入坑第三阶段。谈谈自己的历程感受吧！<strong>第一阶段：限制太多，不够灵活(最主要广告贼多).第二阶段：太耗时，还耗钱。第三阶段：通过第三方平台，自己自定义网站模板，贼舒服。</strong>这次借助自己建站的机会写下此文。</p>\n<h3 id=\"二、GitHub搭建个人博客\"><a href=\"#二、GitHub搭建个人博客\" class=\"headerlink\" title=\"二、GitHub搭建个人博客\"></a>二、GitHub搭建个人博客</h3><p>&emsp;&emsp;注：在建站之前你要在<a href=\"https://github.com/\">GitHub</a>有账号。简单提一句：<a href=\"https://github.com/\">GitHub</a>是通过git进行版本控制的的软件源代码托管服务。可以理解为就是一个云仓库，你可以通过git向仓库提交你想提交的任何文件。<br><strong>GitHub搭建的个人博客(本质也就是仓库)</strong></p>\n<h5 id=\"1、创建仓库\"><a href=\"#1、创建仓库\" class=\"headerlink\" title=\"1、创建仓库\"></a>1、创建仓库</h5><p><img src=\"/images/article/github/1.jpg\" alt=\"创建仓库\"></p>\n<h5 id=\"2、仓库命名\"><a href=\"#2、仓库命名\" class=\"headerlink\" title=\"2、仓库命名\"></a>2、仓库命名</h5><p><img src=\"/images/article/github/2.jpg\" alt=\"创建仓库\"></p>\n<h6 id=\"2-1、注意空间名称\"><a href=\"#2-1、注意空间名称\" class=\"headerlink\" title=\"2.1、注意空间名称\"></a>2.1、注意空间名称</h6><p><img src=\"/images/article/github/3.jpg\" alt=\"创建仓库\"><br>以上二步操作完，，一个简单的个人博客基本上已经成功了。访问<a href=\"https://xxxx.github.io/\">https://xxxx.github.io/</a><br>我的<a href=\"https://imzdong.github.io/\">https://imzdong.github.io/</a><br><img src=\"/images/article/github/4.jpg\" alt=\"成功\"></p>\n<blockquote>\n<p>如果你本人首次操作的时候一定要遵循图片中的提示。老司机随意。最后会讲如果不按照图片提示操作会出现的情况</p>\n</blockquote>\n<h5 id=\"3、选择简单模板\"><a href=\"#3、选择简单模板\" class=\"headerlink\" title=\"3、选择简单模板\"></a>3、选择简单模板</h5><p><img src=\"/images/article/github/5.jpg\" alt=\"简单模板\"><br>目前两大静态博客主流框架：<a href=\"http://jekyllcn.com/\">Jekyll</a>和<a href=\"https://hexo.io/zh-cn/\">Hexo</a></p>\n<h6 id=\"3-1、github默认主题Jekyll\"><a href=\"#3-1、github默认主题Jekyll\" class=\"headerlink\" title=\"3.1、github默认主题Jekyll\"></a>3.1、github默认主题<a href=\"http://jekyllcn.com/\">Jekyll</a></h6><p><img src=\"/images/article/github/6.jpg\" alt=\"简单模板\"></p>\n<h6 id=\"3-2、Jekyll的几种主题\"><a href=\"#3-2、Jekyll的几种主题\" class=\"headerlink\" title=\"3.2、Jekyll的几种主题\"></a>3.2、<a href=\"http://jekyllcn.com/\">Jekyll</a>的几种主题</h6><p><img src=\"/images/article/github/7.jpg\" alt=\"简单模板主题\"></p>\n<h6 id=\"3-3、确认主题\"><a href=\"#3-3、确认主题\" class=\"headerlink\" title=\"3.3、确认主题\"></a>3.3、确认主题</h6><p>简单主题选择完后，再次访问你的网站<a href=\"https://xxxx.github.io/\">https://xxxx.github.io/</a><br><img src=\"/images/article/github/8.jpg\" alt=\"简单模板\"></p>\n<blockquote>\n<p>注意：<strong>以下是未按照我截图的仓库名称命名出现的问题</strong></p>\n</blockquote>\n<h5 id=\"4、注意事项\"><a href=\"#4、注意事项\" class=\"headerlink\" title=\"4、注意事项\"></a>4、注意事项</h5><p>仓库名称随便起（比如：imzdong） 那需要访问 <a href=\"http://imzdong.github.io/imzdong\">http://imzdong.github.io/imzdong</a> 才能访问到我的网站<br>访问 <a href=\"http://imzdong.github.io\">http://imzdong.github.io</a>  是访问不到的<br><img src=\"/images/article/github/9.jpg\" alt=\"简单模板\"><br><img src=\"/images/article/github/10.jpg\" alt=\"简单模板\"></p>\n<p>以上几步就可以简单的实现搭建简易博客了，祝各位好运！欢迎访问<a href=\"https://imzdong.github.io/\">我的博客</a></p>\n<blockquote>\n<h5 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h5><p><a href=\"https://hexo.io/zh-cn/docs/index.html\">Hexo中文文档</a><br><a href=\"http://jekyllcn.com/\">Jekyll中文文档</a><br><a href=\"https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/\">我的博客主题文档</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>两步快速使用github搭建个人博客，借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+<a href=\"https://hexo.io/zh-cn/docs/index.html\">Hexo</a>）<br>","more":"</p>\n<h3 id=\"一、为何要搭建个人博客？\"><a href=\"#一、为何要搭建个人博客？\" class=\"headerlink\" title=\"一、为何要搭建个人博客？\"></a>一、为何要搭建个人博客？</h3><p>&emsp;&emsp;网上某大神说过“建站三阶段”（针对博客服务器及博客控制权区分）：</p>\n<blockquote>\n<ul>\n<li>1、借助第三方平台，完全把控制权给第三方（比如博客园、CSDN、简书等平台）</li>\n</ul>\n<ul>\n<li>2、自己搭建平台，博客服务器及博客控制权都自己来维护（阿里云+网站）</li>\n</ul>\n<ul>\n<li>3、借助第三方平台，博客服务器归第三方，自己仅控制博客的控制权（借助GitHub Pages+<a href=\"https://hexo.io/zh-cn/docs/index.html\">Hexo</a>）</li>\n</ul>\n</blockquote>\n<p>&emsp;&emsp;本人看后，微微一笑，双手赞成。本人已经经历了一二阶段。现在入坑第三阶段。谈谈自己的历程感受吧！<strong>第一阶段：限制太多，不够灵活(最主要广告贼多).第二阶段：太耗时，还耗钱。第三阶段：通过第三方平台，自己自定义网站模板，贼舒服。</strong>这次借助自己建站的机会写下此文。</p>\n<h3 id=\"二、GitHub搭建个人博客\"><a href=\"#二、GitHub搭建个人博客\" class=\"headerlink\" title=\"二、GitHub搭建个人博客\"></a>二、GitHub搭建个人博客</h3><p>&emsp;&emsp;注：在建站之前你要在<a href=\"https://github.com/\">GitHub</a>有账号。简单提一句：<a href=\"https://github.com/\">GitHub</a>是通过git进行版本控制的的软件源代码托管服务。可以理解为就是一个云仓库，你可以通过git向仓库提交你想提交的任何文件。<br><strong>GitHub搭建的个人博客(本质也就是仓库)</strong></p>\n<h5 id=\"1、创建仓库\"><a href=\"#1、创建仓库\" class=\"headerlink\" title=\"1、创建仓库\"></a>1、创建仓库</h5><p><img src=\"/images/article/github/1.jpg\" alt=\"创建仓库\"></p>\n<h5 id=\"2、仓库命名\"><a href=\"#2、仓库命名\" class=\"headerlink\" title=\"2、仓库命名\"></a>2、仓库命名</h5><p><img src=\"/images/article/github/2.jpg\" alt=\"创建仓库\"></p>\n<h6 id=\"2-1、注意空间名称\"><a href=\"#2-1、注意空间名称\" class=\"headerlink\" title=\"2.1、注意空间名称\"></a>2.1、注意空间名称</h6><p><img src=\"/images/article/github/3.jpg\" alt=\"创建仓库\"><br>以上二步操作完，，一个简单的个人博客基本上已经成功了。访问<a href=\"https://xxxx.github.io/\">https://xxxx.github.io/</a><br>我的<a href=\"https://imzdong.github.io/\">https://imzdong.github.io/</a><br><img src=\"/images/article/github/4.jpg\" alt=\"成功\"></p>\n<blockquote>\n<p>如果你本人首次操作的时候一定要遵循图片中的提示。老司机随意。最后会讲如果不按照图片提示操作会出现的情况</p>\n</blockquote>\n<h5 id=\"3、选择简单模板\"><a href=\"#3、选择简单模板\" class=\"headerlink\" title=\"3、选择简单模板\"></a>3、选择简单模板</h5><p><img src=\"/images/article/github/5.jpg\" alt=\"简单模板\"><br>目前两大静态博客主流框架：<a href=\"http://jekyllcn.com/\">Jekyll</a>和<a href=\"https://hexo.io/zh-cn/\">Hexo</a></p>\n<h6 id=\"3-1、github默认主题Jekyll\"><a href=\"#3-1、github默认主题Jekyll\" class=\"headerlink\" title=\"3.1、github默认主题Jekyll\"></a>3.1、github默认主题<a href=\"http://jekyllcn.com/\">Jekyll</a></h6><p><img src=\"/images/article/github/6.jpg\" alt=\"简单模板\"></p>\n<h6 id=\"3-2、Jekyll的几种主题\"><a href=\"#3-2、Jekyll的几种主题\" class=\"headerlink\" title=\"3.2、Jekyll的几种主题\"></a>3.2、<a href=\"http://jekyllcn.com/\">Jekyll</a>的几种主题</h6><p><img src=\"/images/article/github/7.jpg\" alt=\"简单模板主题\"></p>\n<h6 id=\"3-3、确认主题\"><a href=\"#3-3、确认主题\" class=\"headerlink\" title=\"3.3、确认主题\"></a>3.3、确认主题</h6><p>简单主题选择完后，再次访问你的网站<a href=\"https://xxxx.github.io/\">https://xxxx.github.io/</a><br><img src=\"/images/article/github/8.jpg\" alt=\"简单模板\"></p>\n<blockquote>\n<p>注意：<strong>以下是未按照我截图的仓库名称命名出现的问题</strong></p>\n</blockquote>\n<h5 id=\"4、注意事项\"><a href=\"#4、注意事项\" class=\"headerlink\" title=\"4、注意事项\"></a>4、注意事项</h5><p>仓库名称随便起（比如：imzdong） 那需要访问 <a href=\"http://imzdong.github.io/imzdong\">http://imzdong.github.io/imzdong</a> 才能访问到我的网站<br>访问 <a href=\"http://imzdong.github.io\">http://imzdong.github.io</a>  是访问不到的<br><img src=\"/images/article/github/9.jpg\" alt=\"简单模板\"><br><img src=\"/images/article/github/10.jpg\" alt=\"简单模板\"></p>\n<p>以上几步就可以简单的实现搭建简易博客了，祝各位好运！欢迎访问<a href=\"https://imzdong.github.io/\">我的博客</a></p>\n<blockquote>\n<h5 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h5><p><a href=\"https://hexo.io/zh-cn/docs/index.html\">Hexo中文文档</a><br><a href=\"http://jekyllcn.com/\">Jekyll中文文档</a><br><a href=\"https://godbmw.com/passages/2018-11-15-theme-bmw-docs-zh/\">我的博客主题文档</a></p>\n</blockquote>"},{"title":"Java-集合","date":"2019-05-08T11:49:47.000Z","_content":"","source":"_posts/2019-05-08-List.md","raw":"---\ntitle: Java-集合\ndate: 2019-05-08 19:49:47\ncategories: \n- 技术\ntags:\n- Java\n---\n","slug":"2019-05-08-List","published":1,"updated":"2019-05-08T11:53:47.289Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2aft5k00001uwtkwxhqjl3z","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"一文读懂数据结构和算法","date":"2019-05-09T01:03:44.000Z","_content":"最近读了《数据结构（Java版）（第4版）》，感觉受益匪浅。不过许多东西也模棱两可，就准备写下此文巩固自己的认知。\n忘记那个大佬说过“看明白和写出来让别人看明白两个概念”。\n<!-- more -->\n> 数据结构和算法的重要性不言而喻，有追求的大佬都懂的，在此就不唠叨了，不过也希望大家看完此文可以感受到它的重要性。\n\n### 什么是数据结构？\n`码农小明，敲了几年代码后，突然发现自己有了一大笔钱。于是决定回去盖个大别墅。盖房子前准备，小明买了沙子、水泥、水、石灰、钢筋、砖头等等。`\n###### 1、数据\n此时，已经引出了数据结构的几个重要概念。\n```\n    小明 ===》 计算机程序  \n    沙子、水泥、水、石灰、砖头... ===》 数据\n    房子   ===》  程序处理数据后的结果\n```\n官方科普：计算机程序说白了就是接收数据、处理数据和展示数据。数据就是计算机程序处理的对象。**数据(Data)是描述客观事物的数字、字符以及所有能输入到计算机中并能被计算机接收的各种符合集合的统称**\n`完事具备，盖房子继续，材料都有了，但是不能随便乱盖吧，需要先把材料分分类，地基用那些砖头，支柱用那些砖头，墙用那些砖头...小明用一个小本本一一记录下来，A区域的砖头，先用，接着用B砖头的，然后用...`\n###### 2、数据结构\n`砖头本来和砖头之间没有什么关系的，现在由于小明的小本本，砖头之间有了一定的逻辑关系。`\n数据结构是指数据元素之间的关系。主要包含三部分：数据之间的逻辑关系；数据之间的存储结构；对数据的操作；\n```\n数据逻辑结构：线性结构（数组、栈、队列、链表）和非线性结构（树、图）\n数据存储结构：顺序存储和链式存储\n对数据的操作：遍历、查找、删除、修改\n```\n###### 3、数据类型\n类型是具有相同逻辑意义的一组值的集合。数据类型是指一个类型和定义在这个类型上的操作。Java为例：基本数据类型（byte、short、char、int、long、float、double、boolean）和引用数据类型（数组、类、接口）\n数据类型和数据结构两个侧重点不同，数据类型研究的是每种数据所具有的特性，以及对这种特性的数据能够进行那些操作。数据结构研究的是数据元素之间的关系。\n```\n浅谈数据类型和数据不同\n+ （1）数据类型定义了数据在计算机存储的大小及数据的操作。比如int类型的数据，在计算机存储是两个字节的长度。int类型有一些加、减、乘、除的操作。\n数据结构定义了数据存储及组织数据的方式。比如mysql数据库索引，使用的是B+树结构，提高了数据的检索效率，减少了io的操作。\n+ （2）数据类型是一类事物的集合，数据结构是一种解决问题的思想。\n+ （3）数据类型中也会用到数据结构，如HashMap的低层结构是数组+链表+红黑树\n```\n### 什么是算法？\n现实中，大家去图书馆看书，需要找一本书，图书馆的书籍都有编号1、2、3、4、5、6...，当你准备取编号300的书《笑傲江湖》，书籍都是按照顺序排列的，假设1000本书，编号500的书就在中间，那我这本编号300的书就在中间靠前的书架。1-500的中间是250，编号300的书又在前半部分的后半部分，这样很快的定位到编号300的书在那个书架上了，此时我们就用到了简单的二分查找算法。\n算法：是一个有穷规则的集合。其规则确定了一个解决某一特定类型问题的操作序列。\n5个规则：1、有穷性；2、确定性；3、可行性；4、有输入；5、有输出；\n","source":"_posts/2019-05-09-Data.md","raw":"---\ntitle: 一文读懂数据结构和算法\ndate: 2019-05-09 09:03:44\ncategories: \n- 技术\ntags:\n- Java\n---\n最近读了《数据结构（Java版）（第4版）》，感觉受益匪浅。不过许多东西也模棱两可，就准备写下此文巩固自己的认知。\n忘记那个大佬说过“看明白和写出来让别人看明白两个概念”。\n<!-- more -->\n> 数据结构和算法的重要性不言而喻，有追求的大佬都懂的，在此就不唠叨了，不过也希望大家看完此文可以感受到它的重要性。\n\n### 什么是数据结构？\n`码农小明，敲了几年代码后，突然发现自己有了一大笔钱。于是决定回去盖个大别墅。盖房子前准备，小明买了沙子、水泥、水、石灰、钢筋、砖头等等。`\n###### 1、数据\n此时，已经引出了数据结构的几个重要概念。\n```\n    小明 ===》 计算机程序  \n    沙子、水泥、水、石灰、砖头... ===》 数据\n    房子   ===》  程序处理数据后的结果\n```\n官方科普：计算机程序说白了就是接收数据、处理数据和展示数据。数据就是计算机程序处理的对象。**数据(Data)是描述客观事物的数字、字符以及所有能输入到计算机中并能被计算机接收的各种符合集合的统称**\n`完事具备，盖房子继续，材料都有了，但是不能随便乱盖吧，需要先把材料分分类，地基用那些砖头，支柱用那些砖头，墙用那些砖头...小明用一个小本本一一记录下来，A区域的砖头，先用，接着用B砖头的，然后用...`\n###### 2、数据结构\n`砖头本来和砖头之间没有什么关系的，现在由于小明的小本本，砖头之间有了一定的逻辑关系。`\n数据结构是指数据元素之间的关系。主要包含三部分：数据之间的逻辑关系；数据之间的存储结构；对数据的操作；\n```\n数据逻辑结构：线性结构（数组、栈、队列、链表）和非线性结构（树、图）\n数据存储结构：顺序存储和链式存储\n对数据的操作：遍历、查找、删除、修改\n```\n###### 3、数据类型\n类型是具有相同逻辑意义的一组值的集合。数据类型是指一个类型和定义在这个类型上的操作。Java为例：基本数据类型（byte、short、char、int、long、float、double、boolean）和引用数据类型（数组、类、接口）\n数据类型和数据结构两个侧重点不同，数据类型研究的是每种数据所具有的特性，以及对这种特性的数据能够进行那些操作。数据结构研究的是数据元素之间的关系。\n```\n浅谈数据类型和数据不同\n+ （1）数据类型定义了数据在计算机存储的大小及数据的操作。比如int类型的数据，在计算机存储是两个字节的长度。int类型有一些加、减、乘、除的操作。\n数据结构定义了数据存储及组织数据的方式。比如mysql数据库索引，使用的是B+树结构，提高了数据的检索效率，减少了io的操作。\n+ （2）数据类型是一类事物的集合，数据结构是一种解决问题的思想。\n+ （3）数据类型中也会用到数据结构，如HashMap的低层结构是数组+链表+红黑树\n```\n### 什么是算法？\n现实中，大家去图书馆看书，需要找一本书，图书馆的书籍都有编号1、2、3、4、5、6...，当你准备取编号300的书《笑傲江湖》，书籍都是按照顺序排列的，假设1000本书，编号500的书就在中间，那我这本编号300的书就在中间靠前的书架。1-500的中间是250，编号300的书又在前半部分的后半部分，这样很快的定位到编号300的书在那个书架上了，此时我们就用到了简单的二分查找算法。\n算法：是一个有穷规则的集合。其规则确定了一个解决某一特定类型问题的操作序列。\n5个规则：1、有穷性；2、确定性；3、可行性；4、有输入；5、有输出；\n","slug":"2019-05-09-Data","published":1,"updated":"2019-05-29T08:39:04.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2aft5k40004uwtkg3kke400","content":"<p>最近读了《数据结构（Java版）（第4版）》，感觉受益匪浅。不过许多东西也模棱两可，就准备写下此文巩固自己的认知。<br>忘记那个大佬说过“看明白和写出来让别人看明白两个概念”。<br><a id=\"more\"></a></p>\n<blockquote>\n<p>数据结构和算法的重要性不言而喻，有追求的大佬都懂的，在此就不唠叨了，不过也希望大家看完此文可以感受到它的重要性。</p>\n</blockquote>\n<h3 id=\"什么是数据结构？\"><a href=\"#什么是数据结构？\" class=\"headerlink\" title=\"什么是数据结构？\"></a>什么是数据结构？</h3><p><code>码农小明，敲了几年代码后，突然发现自己有了一大笔钱。于是决定回去盖个大别墅。盖房子前准备，小明买了沙子、水泥、水、石灰、钢筋、砖头等等。</code></p>\n<h6 id=\"1、数据\"><a href=\"#1、数据\" class=\"headerlink\" title=\"1、数据\"></a>1、数据</h6><p>此时，已经引出了数据结构的几个重要概念。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">小明 ===》 计算机程序  </span><br><span class=\"line\">沙子、水泥、水、石灰、砖头... ===》 数据</span><br><span class=\"line\">房子   ===》  程序处理数据后的结果</span><br></pre></td></tr></table></figure></p>\n<p>官方科普：计算机程序说白了就是接收数据、处理数据和展示数据。数据就是计算机程序处理的对象。<strong>数据(Data)是描述客观事物的数字、字符以及所有能输入到计算机中并能被计算机接收的各种符合集合的统称</strong><br><code>完事具备，盖房子继续，材料都有了，但是不能随便乱盖吧，需要先把材料分分类，地基用那些砖头，支柱用那些砖头，墙用那些砖头...小明用一个小本本一一记录下来，A区域的砖头，先用，接着用B砖头的，然后用...</code></p>\n<h6 id=\"2、数据结构\"><a href=\"#2、数据结构\" class=\"headerlink\" title=\"2、数据结构\"></a>2、数据结构</h6><p><code>砖头本来和砖头之间没有什么关系的，现在由于小明的小本本，砖头之间有了一定的逻辑关系。</code><br>数据结构是指数据元素之间的关系。主要包含三部分：数据之间的逻辑关系；数据之间的存储结构；对数据的操作；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据逻辑结构：线性结构（数组、栈、队列、链表）和非线性结构（树、图）</span><br><span class=\"line\">数据存储结构：顺序存储和链式存储</span><br><span class=\"line\">对数据的操作：遍历、查找、删除、修改</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3、数据类型\"><a href=\"#3、数据类型\" class=\"headerlink\" title=\"3、数据类型\"></a>3、数据类型</h6><p>类型是具有相同逻辑意义的一组值的集合。数据类型是指一个类型和定义在这个类型上的操作。Java为例：基本数据类型（byte、short、char、int、long、float、double、boolean）和引用数据类型（数组、类、接口）<br>数据类型和数据结构两个侧重点不同，数据类型研究的是每种数据所具有的特性，以及对这种特性的数据能够进行那些操作。数据结构研究的是数据元素之间的关系。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">浅谈数据类型和数据不同</span><br><span class=\"line\">+ （1）数据类型定义了数据在计算机存储的大小及数据的操作。比如int类型的数据，在计算机存储是两个字节的长度。int类型有一些加、减、乘、除的操作。</span><br><span class=\"line\">数据结构定义了数据存储及组织数据的方式。比如mysql数据库索引，使用的是B+树结构，提高了数据的检索效率，减少了io的操作。</span><br><span class=\"line\">+ （2）数据类型是一类事物的集合，数据结构是一种解决问题的思想。</span><br><span class=\"line\">+ （3）数据类型中也会用到数据结构，如HashMap的低层结构是数组+链表+红黑树</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"什么是算法？\"><a href=\"#什么是算法？\" class=\"headerlink\" title=\"什么是算法？\"></a>什么是算法？</h3><p>现实中，大家去图书馆看书，需要找一本书，图书馆的书籍都有编号1、2、3、4、5、6…，当你准备取编号300的书《笑傲江湖》，书籍都是按照顺序排列的，假设1000本书，编号500的书就在中间，那我这本编号300的书就在中间靠前的书架。1-500的中间是250，编号300的书又在前半部分的后半部分，这样很快的定位到编号300的书在那个书架上了，此时我们就用到了简单的二分查找算法。<br>算法：是一个有穷规则的集合。其规则确定了一个解决某一特定类型问题的操作序列。<br>5个规则：1、有穷性；2、确定性；3、可行性；4、有输入；5、有输出；</p>\n","site":{"data":{}},"excerpt":"<p>最近读了《数据结构（Java版）（第4版）》，感觉受益匪浅。不过许多东西也模棱两可，就准备写下此文巩固自己的认知。<br>忘记那个大佬说过“看明白和写出来让别人看明白两个概念”。<br>","more":"</p>\n<blockquote>\n<p>数据结构和算法的重要性不言而喻，有追求的大佬都懂的，在此就不唠叨了，不过也希望大家看完此文可以感受到它的重要性。</p>\n</blockquote>\n<h3 id=\"什么是数据结构？\"><a href=\"#什么是数据结构？\" class=\"headerlink\" title=\"什么是数据结构？\"></a>什么是数据结构？</h3><p><code>码农小明，敲了几年代码后，突然发现自己有了一大笔钱。于是决定回去盖个大别墅。盖房子前准备，小明买了沙子、水泥、水、石灰、钢筋、砖头等等。</code></p>\n<h6 id=\"1、数据\"><a href=\"#1、数据\" class=\"headerlink\" title=\"1、数据\"></a>1、数据</h6><p>此时，已经引出了数据结构的几个重要概念。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">小明 ===》 计算机程序  </span><br><span class=\"line\">沙子、水泥、水、石灰、砖头... ===》 数据</span><br><span class=\"line\">房子   ===》  程序处理数据后的结果</span><br></pre></td></tr></table></figure></p>\n<p>官方科普：计算机程序说白了就是接收数据、处理数据和展示数据。数据就是计算机程序处理的对象。<strong>数据(Data)是描述客观事物的数字、字符以及所有能输入到计算机中并能被计算机接收的各种符合集合的统称</strong><br><code>完事具备，盖房子继续，材料都有了，但是不能随便乱盖吧，需要先把材料分分类，地基用那些砖头，支柱用那些砖头，墙用那些砖头...小明用一个小本本一一记录下来，A区域的砖头，先用，接着用B砖头的，然后用...</code></p>\n<h6 id=\"2、数据结构\"><a href=\"#2、数据结构\" class=\"headerlink\" title=\"2、数据结构\"></a>2、数据结构</h6><p><code>砖头本来和砖头之间没有什么关系的，现在由于小明的小本本，砖头之间有了一定的逻辑关系。</code><br>数据结构是指数据元素之间的关系。主要包含三部分：数据之间的逻辑关系；数据之间的存储结构；对数据的操作；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据逻辑结构：线性结构（数组、栈、队列、链表）和非线性结构（树、图）</span><br><span class=\"line\">数据存储结构：顺序存储和链式存储</span><br><span class=\"line\">对数据的操作：遍历、查找、删除、修改</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"3、数据类型\"><a href=\"#3、数据类型\" class=\"headerlink\" title=\"3、数据类型\"></a>3、数据类型</h6><p>类型是具有相同逻辑意义的一组值的集合。数据类型是指一个类型和定义在这个类型上的操作。Java为例：基本数据类型（byte、short、char、int、long、float、double、boolean）和引用数据类型（数组、类、接口）<br>数据类型和数据结构两个侧重点不同，数据类型研究的是每种数据所具有的特性，以及对这种特性的数据能够进行那些操作。数据结构研究的是数据元素之间的关系。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">浅谈数据类型和数据不同</span><br><span class=\"line\">+ （1）数据类型定义了数据在计算机存储的大小及数据的操作。比如int类型的数据，在计算机存储是两个字节的长度。int类型有一些加、减、乘、除的操作。</span><br><span class=\"line\">数据结构定义了数据存储及组织数据的方式。比如mysql数据库索引，使用的是B+树结构，提高了数据的检索效率，减少了io的操作。</span><br><span class=\"line\">+ （2）数据类型是一类事物的集合，数据结构是一种解决问题的思想。</span><br><span class=\"line\">+ （3）数据类型中也会用到数据结构，如HashMap的低层结构是数组+链表+红黑树</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"什么是算法？\"><a href=\"#什么是算法？\" class=\"headerlink\" title=\"什么是算法？\"></a>什么是算法？</h3><p>现实中，大家去图书馆看书，需要找一本书，图书馆的书籍都有编号1、2、3、4、5、6…，当你准备取编号300的书《笑傲江湖》，书籍都是按照顺序排列的，假设1000本书，编号500的书就在中间，那我这本编号300的书就在中间靠前的书架。1-500的中间是250，编号300的书又在前半部分的后半部分，这样很快的定位到编号300的书在那个书架上了，此时我们就用到了简单的二分查找算法。<br>算法：是一个有穷规则的集合。其规则确定了一个解决某一特定类型问题的操作序列。<br>5个规则：1、有穷性；2、确定性；3、可行性；4、有输入；5、有输出；</p>"},{"title":"常用Mysql语句","date":"2019-05-09T01:18:58.000Z","_content":"\n+ 1、批量拼凑修改语句\n```\nSELECT\n\tconcat(\n\t\t\"ALTER TABLE \",\n\t\tTABLE_NAME,\n\t\t\" modify column \",\n\t\tCOLUMN_NAME,\n\t\t\" \",\n\t\tCOLUMN_TYPE,\n\tIF\n\t\t( COLUMN_DEFAULT IS NULL, \" \", concat( \" DEFAULT \", IF ( COLUMN_DEFAULT = '', \"''\", COLUMN_DEFAULT ) ) ),\n\tIF\n\t\t( IS_NULLABLE = 'NO', \" NOT NULL \", '' ),\n\t\t\" COMMENT \",\n\t\t\" \",\n\t\t\"'12343'\" \n\t) 修改语句\nFROM\n\tinformation_schema.COLUMNS \nWHERE\n\tTABLE_NAME = 'fin_subject_approval_list' AND COLUMN_COMMENT = '';\n```","source":"_posts/2019-05-09-MysqlSentence.md","raw":"---\ntitle: 常用Mysql语句\ndate: 2019-05-09 09:18:58\ntags:\n---\n\n+ 1、批量拼凑修改语句\n```\nSELECT\n\tconcat(\n\t\t\"ALTER TABLE \",\n\t\tTABLE_NAME,\n\t\t\" modify column \",\n\t\tCOLUMN_NAME,\n\t\t\" \",\n\t\tCOLUMN_TYPE,\n\tIF\n\t\t( COLUMN_DEFAULT IS NULL, \" \", concat( \" DEFAULT \", IF ( COLUMN_DEFAULT = '', \"''\", COLUMN_DEFAULT ) ) ),\n\tIF\n\t\t( IS_NULLABLE = 'NO', \" NOT NULL \", '' ),\n\t\t\" COMMENT \",\n\t\t\" \",\n\t\t\"'12343'\" \n\t) 修改语句\nFROM\n\tinformation_schema.COLUMNS \nWHERE\n\tTABLE_NAME = 'fin_subject_approval_list' AND COLUMN_COMMENT = '';\n```","slug":"2019-05-09-MysqlSentence","published":1,"updated":"2019-05-09T01:20:39.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2aft5k50005uwtkpmzan48v","content":"<ul>\n<li>1、批量拼凑修改语句<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\tconcat(</span><br><span class=\"line\">\t\t&quot;ALTER TABLE &quot;,</span><br><span class=\"line\">\t\tTABLE_NAME,</span><br><span class=\"line\">\t\t&quot; modify column &quot;,</span><br><span class=\"line\">\t\tCOLUMN_NAME,</span><br><span class=\"line\">\t\t&quot; &quot;,</span><br><span class=\"line\">\t\tCOLUMN_TYPE,</span><br><span class=\"line\">\tIF</span><br><span class=\"line\">\t\t( COLUMN_DEFAULT IS NULL, &quot; &quot;, concat( &quot; DEFAULT &quot;, IF ( COLUMN_DEFAULT = &apos;&apos;, &quot;&apos;&apos;&quot;, COLUMN_DEFAULT ) ) ),</span><br><span class=\"line\">\tIF</span><br><span class=\"line\">\t\t( IS_NULLABLE = &apos;NO&apos;, &quot; NOT NULL &quot;, &apos;&apos; ),</span><br><span class=\"line\">\t\t&quot; COMMENT &quot;,</span><br><span class=\"line\">\t\t&quot; &quot;,</span><br><span class=\"line\">\t\t&quot;&apos;12343&apos;&quot; </span><br><span class=\"line\">\t) 修改语句</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tinformation_schema.COLUMNS </span><br><span class=\"line\">WHERE</span><br><span class=\"line\">\tTABLE_NAME = &apos;fin_subject_approval_list&apos; AND COLUMN_COMMENT = &apos;&apos;;</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>1、批量拼凑修改语句<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT</span><br><span class=\"line\">\tconcat(</span><br><span class=\"line\">\t\t&quot;ALTER TABLE &quot;,</span><br><span class=\"line\">\t\tTABLE_NAME,</span><br><span class=\"line\">\t\t&quot; modify column &quot;,</span><br><span class=\"line\">\t\tCOLUMN_NAME,</span><br><span class=\"line\">\t\t&quot; &quot;,</span><br><span class=\"line\">\t\tCOLUMN_TYPE,</span><br><span class=\"line\">\tIF</span><br><span class=\"line\">\t\t( COLUMN_DEFAULT IS NULL, &quot; &quot;, concat( &quot; DEFAULT &quot;, IF ( COLUMN_DEFAULT = &apos;&apos;, &quot;&apos;&apos;&quot;, COLUMN_DEFAULT ) ) ),</span><br><span class=\"line\">\tIF</span><br><span class=\"line\">\t\t( IS_NULLABLE = &apos;NO&apos;, &quot; NOT NULL &quot;, &apos;&apos; ),</span><br><span class=\"line\">\t\t&quot; COMMENT &quot;,</span><br><span class=\"line\">\t\t&quot; &quot;,</span><br><span class=\"line\">\t\t&quot;&apos;12343&apos;&quot; </span><br><span class=\"line\">\t) 修改语句</span><br><span class=\"line\">FROM</span><br><span class=\"line\">\tinformation_schema.COLUMNS </span><br><span class=\"line\">WHERE</span><br><span class=\"line\">\tTABLE_NAME = &apos;fin_subject_approval_list&apos; AND COLUMN_COMMENT = &apos;&apos;;</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"日常常用工具","date":"2019-07-23T05:39:58.000Z","_content":"\n1、sun公司的代码规范\nhttps://www.oracle.com/technetwork/java/codeconvtoc-136057.html\n2、代码格式\nhttp://www.triemax.com\nJalopy","source":"_posts/2019-07-23-Common-tools.md","raw":"---\ntitle: 日常常用工具\ndate: 2019-07-23 13:39:58\ntags:\n---\n\n1、sun公司的代码规范\nhttps://www.oracle.com/technetwork/java/codeconvtoc-136057.html\n2、代码格式\nhttp://www.triemax.com\nJalopy","slug":"2019-07-23-Common-tools","published":1,"updated":"2019-07-23T05:48:39.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2aft5k60006uwtk0q58493r","content":"<p>1、sun公司的代码规范<br><a href=\"https://www.oracle.com/technetwork/java/codeconvtoc-136057.html\">https://www.oracle.com/technetwork/java/codeconvtoc-136057.html</a><br>2、代码格式<br><a href=\"http://www.triemax.com\">http://www.triemax.com</a><br>Jalopy</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1、sun公司的代码规范<br><a href=\"https://www.oracle.com/technetwork/java/codeconvtoc-136057.html\">https://www.oracle.com/technetwork/java/codeconvtoc-136057.html</a><br>2、代码格式<br><a href=\"http://www.triemax.com\">http://www.triemax.com</a><br>Jalopy</p>\n"},{"title":"Java编程思想-读后感","date":"2019-07-23T05:12:56.000Z","_content":"\n最近拜读Java编程思想，写的是真的棒，以前看过几次完全看不懂，就也没看进去。这次硬着头皮再次看，发现居然可以看进去，所以建议大家，有些时候不要随波逐流，大神在看啥就跟着去看其实每件事物都是水到渠成最好。但是最重要的一点，不要放弃！坚持去做！这次既然看的进去，那就准备记录下博客，不仅加深自己的理解，而且后续还能回顾。\n<!-- more -->\n### 一、[对象导论](/passages/2019-07-26-Object-Introduction/)\n##### 1.1、万物皆对象\n### 二、一切都是对象\n### 三、操作符\n### 四、控制执行流程\n### 五、初始化与清理\n### 六、访问权限控制\n### 七、复用类\n### 八、多态\n### 九、接口\n### 十、内部类\n### 十一、持有对象\n### 十二、通过异常处理错误\n### 十三、字符串\n### 十四、类型信息\n### 十五、泛型\n### 十六、数组\n### 十七、容器深入研究\n### 十八、Java I/O系统\n### 十九、枚举类型\n### 二十、注解\n### 二十一、并发\n### 二十二、图形化用户界面","source":"_posts/2019-07-23-Think-In-Java.md","raw":"---\ntitle: Java编程思想-读后感\ndate: 2019-07-23 13:12:56\ncategories: \n- 技术\ntags:\n- Java\n---\n\n最近拜读Java编程思想，写的是真的棒，以前看过几次完全看不懂，就也没看进去。这次硬着头皮再次看，发现居然可以看进去，所以建议大家，有些时候不要随波逐流，大神在看啥就跟着去看其实每件事物都是水到渠成最好。但是最重要的一点，不要放弃！坚持去做！这次既然看的进去，那就准备记录下博客，不仅加深自己的理解，而且后续还能回顾。\n<!-- more -->\n### 一、[对象导论](/passages/2019-07-26-Object-Introduction/)\n##### 1.1、万物皆对象\n### 二、一切都是对象\n### 三、操作符\n### 四、控制执行流程\n### 五、初始化与清理\n### 六、访问权限控制\n### 七、复用类\n### 八、多态\n### 九、接口\n### 十、内部类\n### 十一、持有对象\n### 十二、通过异常处理错误\n### 十三、字符串\n### 十四、类型信息\n### 十五、泛型\n### 十六、数组\n### 十七、容器深入研究\n### 十八、Java I/O系统\n### 十九、枚举类型\n### 二十、注解\n### 二十一、并发\n### 二十二、图形化用户界面","slug":"2019-07-23-Think-In-Java","published":1,"updated":"2019-07-29T01:36:10.216Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2aft5k8000auwtk66pb9vj0","content":"<p>最近拜读Java编程思想，写的是真的棒，以前看过几次完全看不懂，就也没看进去。这次硬着头皮再次看，发现居然可以看进去，所以建议大家，有些时候不要随波逐流，大神在看啥就跟着去看其实每件事物都是水到渠成最好。但是最重要的一点，不要放弃！坚持去做！这次既然看的进去，那就准备记录下博客，不仅加深自己的理解，而且后续还能回顾。<br><a id=\"more\"></a></p>\n<h3 id=\"一、对象导论\"><a href=\"#一、对象导论\" class=\"headerlink\" title=\"一、对象导论\"></a>一、<a href=\"/passages/2019-07-26-Object-Introduction/\">对象导论</a></h3><h5 id=\"1-1、万物皆对象\"><a href=\"#1-1、万物皆对象\" class=\"headerlink\" title=\"1.1、万物皆对象\"></a>1.1、万物皆对象</h5><h3 id=\"二、一切都是对象\"><a href=\"#二、一切都是对象\" class=\"headerlink\" title=\"二、一切都是对象\"></a>二、一切都是对象</h3><h3 id=\"三、操作符\"><a href=\"#三、操作符\" class=\"headerlink\" title=\"三、操作符\"></a>三、操作符</h3><h3 id=\"四、控制执行流程\"><a href=\"#四、控制执行流程\" class=\"headerlink\" title=\"四、控制执行流程\"></a>四、控制执行流程</h3><h3 id=\"五、初始化与清理\"><a href=\"#五、初始化与清理\" class=\"headerlink\" title=\"五、初始化与清理\"></a>五、初始化与清理</h3><h3 id=\"六、访问权限控制\"><a href=\"#六、访问权限控制\" class=\"headerlink\" title=\"六、访问权限控制\"></a>六、访问权限控制</h3><h3 id=\"七、复用类\"><a href=\"#七、复用类\" class=\"headerlink\" title=\"七、复用类\"></a>七、复用类</h3><h3 id=\"八、多态\"><a href=\"#八、多态\" class=\"headerlink\" title=\"八、多态\"></a>八、多态</h3><h3 id=\"九、接口\"><a href=\"#九、接口\" class=\"headerlink\" title=\"九、接口\"></a>九、接口</h3><h3 id=\"十、内部类\"><a href=\"#十、内部类\" class=\"headerlink\" title=\"十、内部类\"></a>十、内部类</h3><h3 id=\"十一、持有对象\"><a href=\"#十一、持有对象\" class=\"headerlink\" title=\"十一、持有对象\"></a>十一、持有对象</h3><h3 id=\"十二、通过异常处理错误\"><a href=\"#十二、通过异常处理错误\" class=\"headerlink\" title=\"十二、通过异常处理错误\"></a>十二、通过异常处理错误</h3><h3 id=\"十三、字符串\"><a href=\"#十三、字符串\" class=\"headerlink\" title=\"十三、字符串\"></a>十三、字符串</h3><h3 id=\"十四、类型信息\"><a href=\"#十四、类型信息\" class=\"headerlink\" title=\"十四、类型信息\"></a>十四、类型信息</h3><h3 id=\"十五、泛型\"><a href=\"#十五、泛型\" class=\"headerlink\" title=\"十五、泛型\"></a>十五、泛型</h3><h3 id=\"十六、数组\"><a href=\"#十六、数组\" class=\"headerlink\" title=\"十六、数组\"></a>十六、数组</h3><h3 id=\"十七、容器深入研究\"><a href=\"#十七、容器深入研究\" class=\"headerlink\" title=\"十七、容器深入研究\"></a>十七、容器深入研究</h3><h3 id=\"十八、Java-I-O系统\"><a href=\"#十八、Java-I-O系统\" class=\"headerlink\" title=\"十八、Java I/O系统\"></a>十八、Java I/O系统</h3><h3 id=\"十九、枚举类型\"><a href=\"#十九、枚举类型\" class=\"headerlink\" title=\"十九、枚举类型\"></a>十九、枚举类型</h3><h3 id=\"二十、注解\"><a href=\"#二十、注解\" class=\"headerlink\" title=\"二十、注解\"></a>二十、注解</h3><h3 id=\"二十一、并发\"><a href=\"#二十一、并发\" class=\"headerlink\" title=\"二十一、并发\"></a>二十一、并发</h3><h3 id=\"二十二、图形化用户界面\"><a href=\"#二十二、图形化用户界面\" class=\"headerlink\" title=\"二十二、图形化用户界面\"></a>二十二、图形化用户界面</h3>","site":{"data":{}},"excerpt":"<p>最近拜读Java编程思想，写的是真的棒，以前看过几次完全看不懂，就也没看进去。这次硬着头皮再次看，发现居然可以看进去，所以建议大家，有些时候不要随波逐流，大神在看啥就跟着去看其实每件事物都是水到渠成最好。但是最重要的一点，不要放弃！坚持去做！这次既然看的进去，那就准备记录下博客，不仅加深自己的理解，而且后续还能回顾。<br>","more":"</p>\n<h3 id=\"一、对象导论\"><a href=\"#一、对象导论\" class=\"headerlink\" title=\"一、对象导论\"></a>一、<a href=\"/passages/2019-07-26-Object-Introduction/\">对象导论</a></h3><h5 id=\"1-1、万物皆对象\"><a href=\"#1-1、万物皆对象\" class=\"headerlink\" title=\"1.1、万物皆对象\"></a>1.1、万物皆对象</h5><h3 id=\"二、一切都是对象\"><a href=\"#二、一切都是对象\" class=\"headerlink\" title=\"二、一切都是对象\"></a>二、一切都是对象</h3><h3 id=\"三、操作符\"><a href=\"#三、操作符\" class=\"headerlink\" title=\"三、操作符\"></a>三、操作符</h3><h3 id=\"四、控制执行流程\"><a href=\"#四、控制执行流程\" class=\"headerlink\" title=\"四、控制执行流程\"></a>四、控制执行流程</h3><h3 id=\"五、初始化与清理\"><a href=\"#五、初始化与清理\" class=\"headerlink\" title=\"五、初始化与清理\"></a>五、初始化与清理</h3><h3 id=\"六、访问权限控制\"><a href=\"#六、访问权限控制\" class=\"headerlink\" title=\"六、访问权限控制\"></a>六、访问权限控制</h3><h3 id=\"七、复用类\"><a href=\"#七、复用类\" class=\"headerlink\" title=\"七、复用类\"></a>七、复用类</h3><h3 id=\"八、多态\"><a href=\"#八、多态\" class=\"headerlink\" title=\"八、多态\"></a>八、多态</h3><h3 id=\"九、接口\"><a href=\"#九、接口\" class=\"headerlink\" title=\"九、接口\"></a>九、接口</h3><h3 id=\"十、内部类\"><a href=\"#十、内部类\" class=\"headerlink\" title=\"十、内部类\"></a>十、内部类</h3><h3 id=\"十一、持有对象\"><a href=\"#十一、持有对象\" class=\"headerlink\" title=\"十一、持有对象\"></a>十一、持有对象</h3><h3 id=\"十二、通过异常处理错误\"><a href=\"#十二、通过异常处理错误\" class=\"headerlink\" title=\"十二、通过异常处理错误\"></a>十二、通过异常处理错误</h3><h3 id=\"十三、字符串\"><a href=\"#十三、字符串\" class=\"headerlink\" title=\"十三、字符串\"></a>十三、字符串</h3><h3 id=\"十四、类型信息\"><a href=\"#十四、类型信息\" class=\"headerlink\" title=\"十四、类型信息\"></a>十四、类型信息</h3><h3 id=\"十五、泛型\"><a href=\"#十五、泛型\" class=\"headerlink\" title=\"十五、泛型\"></a>十五、泛型</h3><h3 id=\"十六、数组\"><a href=\"#十六、数组\" class=\"headerlink\" title=\"十六、数组\"></a>十六、数组</h3><h3 id=\"十七、容器深入研究\"><a href=\"#十七、容器深入研究\" class=\"headerlink\" title=\"十七、容器深入研究\"></a>十七、容器深入研究</h3><h3 id=\"十八、Java-I-O系统\"><a href=\"#十八、Java-I-O系统\" class=\"headerlink\" title=\"十八、Java I/O系统\"></a>十八、Java I/O系统</h3><h3 id=\"十九、枚举类型\"><a href=\"#十九、枚举类型\" class=\"headerlink\" title=\"十九、枚举类型\"></a>十九、枚举类型</h3><h3 id=\"二十、注解\"><a href=\"#二十、注解\" class=\"headerlink\" title=\"二十、注解\"></a>二十、注解</h3><h3 id=\"二十一、并发\"><a href=\"#二十一、并发\" class=\"headerlink\" title=\"二十一、并发\"></a>二十一、并发</h3><h3 id=\"二十二、图形化用户界面\"><a href=\"#二十二、图形化用户界面\" class=\"headerlink\" title=\"二十二、图形化用户界面\"></a>二十二、图形化用户界面</h3>"},{"title":"1、Java编程思想-对象导论","date":"2019-07-26T02:06:01.000Z","_content":"对象导论这一章花了两天看完，深有感触，使用百度脑图整理了简要知识点，并写下自己浅薄的认知！\n<!-- more -->\n![对象导论](/images/article/introduction/对象导论.png)\n人与人之间通过语言交谈，人如果要控制计算机，就需要通过计算机看得懂的语言。也就是编程语言。编程语言发展：机器语言、汇编语言、高级语言（面向过程、面向对象）\n![编程语言](/images/article/introduction/语言图.jpg)\n## 重要知识点\n### 1、面向过程和面向对象\n面向过程：重视过程、把事务拆成步骤一步一步来。效率高  \n面向对象：把事务分成一个个对象，对象去实现最总结果。牺牲效率，提高重复性。  \n可以借助一个比喻：\n面向过程：蛋炒饭。蛋饭混合，味道均匀可口，但是如果不喜欢其中某些材料（香菜，葱花），需要整盘倒掉重新再炒一份。\n面向对象：盖浇饭。饭菜分离，想吃其他菜，继续加或者换掉。\n### 2、面向对象的特性\n抽象：程序为了解决现实世界的问题，抽象就是把现实世界的一类具有相同特性和行为的事物归为一类。数据抽象：对象属性（人的性别、年龄）；行为抽象：对象方法（人吃、睡）；\n封装：封装具体实现细节。使用方不用关心我的实现细节，直接使用达到自己的目的。防止使用方干预提供方的实现细节。提供方修改实现细节不影响使用方。\n继承：实现一类事物功能的复用及功能的扩展。\n多态：在运行时决定调用子类行为还是父类行为。\n### 3、接口和类、对象\n具有相同特性和行为的一类事物就可以称谓类（class）。\n接口是一种特殊的类（抽象的类、抽象属性、抽象方法）。\n对象就是类的一个实现。\n注：微服务中对外仅提供接口（隐藏自己的实现）。\n### 4、线程和进程\n进程：一次程序的运行过程。共享电脑的内存（4G）。每个进程会分一个虚拟的内存地址空间（4G），分为用户空间（3G）和内核空间（1G）；\n线程：一个轻量级的进程。只是CPU调度单元。有自己的运行栈区，其他资源和父进程共享。\n### 5、其他知识点：比如异常、对象生命周期、并发等后续会详解。","source":"_posts/2019-07-26-Object-Introduction.md","raw":"---\ntitle: 1、Java编程思想-对象导论\ndate: 2019-07-26 10:06:01\ncategories: \n- 技术\ntags:\n- Java\n---\n对象导论这一章花了两天看完，深有感触，使用百度脑图整理了简要知识点，并写下自己浅薄的认知！\n<!-- more -->\n![对象导论](/images/article/introduction/对象导论.png)\n人与人之间通过语言交谈，人如果要控制计算机，就需要通过计算机看得懂的语言。也就是编程语言。编程语言发展：机器语言、汇编语言、高级语言（面向过程、面向对象）\n![编程语言](/images/article/introduction/语言图.jpg)\n## 重要知识点\n### 1、面向过程和面向对象\n面向过程：重视过程、把事务拆成步骤一步一步来。效率高  \n面向对象：把事务分成一个个对象，对象去实现最总结果。牺牲效率，提高重复性。  \n可以借助一个比喻：\n面向过程：蛋炒饭。蛋饭混合，味道均匀可口，但是如果不喜欢其中某些材料（香菜，葱花），需要整盘倒掉重新再炒一份。\n面向对象：盖浇饭。饭菜分离，想吃其他菜，继续加或者换掉。\n### 2、面向对象的特性\n抽象：程序为了解决现实世界的问题，抽象就是把现实世界的一类具有相同特性和行为的事物归为一类。数据抽象：对象属性（人的性别、年龄）；行为抽象：对象方法（人吃、睡）；\n封装：封装具体实现细节。使用方不用关心我的实现细节，直接使用达到自己的目的。防止使用方干预提供方的实现细节。提供方修改实现细节不影响使用方。\n继承：实现一类事物功能的复用及功能的扩展。\n多态：在运行时决定调用子类行为还是父类行为。\n### 3、接口和类、对象\n具有相同特性和行为的一类事物就可以称谓类（class）。\n接口是一种特殊的类（抽象的类、抽象属性、抽象方法）。\n对象就是类的一个实现。\n注：微服务中对外仅提供接口（隐藏自己的实现）。\n### 4、线程和进程\n进程：一次程序的运行过程。共享电脑的内存（4G）。每个进程会分一个虚拟的内存地址空间（4G），分为用户空间（3G）和内核空间（1G）；\n线程：一个轻量级的进程。只是CPU调度单元。有自己的运行栈区，其他资源和父进程共享。\n### 5、其他知识点：比如异常、对象生命周期、并发等后续会详解。","slug":"2019-07-26-Object-Introduction","published":1,"updated":"2019-07-29T01:36:10.217Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2aft5kn000kuwtk1z40l3v9","content":"<p>对象导论这一章花了两天看完，深有感触，使用百度脑图整理了简要知识点，并写下自己浅薄的认知！<br><a id=\"more\"></a><br><img src=\"/images/article/introduction/对象导论.png\" alt=\"对象导论\"><br>人与人之间通过语言交谈，人如果要控制计算机，就需要通过计算机看得懂的语言。也就是编程语言。编程语言发展：机器语言、汇编语言、高级语言（面向过程、面向对象）<br><img src=\"/images/article/introduction/语言图.jpg\" alt=\"编程语言\"></p>\n<h2 id=\"重要知识点\"><a href=\"#重要知识点\" class=\"headerlink\" title=\"重要知识点\"></a>重要知识点</h2><h3 id=\"1、面向过程和面向对象\"><a href=\"#1、面向过程和面向对象\" class=\"headerlink\" title=\"1、面向过程和面向对象\"></a>1、面向过程和面向对象</h3><p>面向过程：重视过程、把事务拆成步骤一步一步来。效率高<br>面向对象：把事务分成一个个对象，对象去实现最总结果。牺牲效率，提高重复性。<br>可以借助一个比喻：<br>面向过程：蛋炒饭。蛋饭混合，味道均匀可口，但是如果不喜欢其中某些材料（香菜，葱花），需要整盘倒掉重新再炒一份。<br>面向对象：盖浇饭。饭菜分离，想吃其他菜，继续加或者换掉。</p>\n<h3 id=\"2、面向对象的特性\"><a href=\"#2、面向对象的特性\" class=\"headerlink\" title=\"2、面向对象的特性\"></a>2、面向对象的特性</h3><p>抽象：程序为了解决现实世界的问题，抽象就是把现实世界的一类具有相同特性和行为的事物归为一类。数据抽象：对象属性（人的性别、年龄）；行为抽象：对象方法（人吃、睡）；<br>封装：封装具体实现细节。使用方不用关心我的实现细节，直接使用达到自己的目的。防止使用方干预提供方的实现细节。提供方修改实现细节不影响使用方。<br>继承：实现一类事物功能的复用及功能的扩展。<br>多态：在运行时决定调用子类行为还是父类行为。</p>\n<h3 id=\"3、接口和类、对象\"><a href=\"#3、接口和类、对象\" class=\"headerlink\" title=\"3、接口和类、对象\"></a>3、接口和类、对象</h3><p>具有相同特性和行为的一类事物就可以称谓类（class）。<br>接口是一种特殊的类（抽象的类、抽象属性、抽象方法）。<br>对象就是类的一个实现。<br>注：微服务中对外仅提供接口（隐藏自己的实现）。</p>\n<h3 id=\"4、线程和进程\"><a href=\"#4、线程和进程\" class=\"headerlink\" title=\"4、线程和进程\"></a>4、线程和进程</h3><p>进程：一次程序的运行过程。共享电脑的内存（4G）。每个进程会分一个虚拟的内存地址空间（4G），分为用户空间（3G）和内核空间（1G）；<br>线程：一个轻量级的进程。只是CPU调度单元。有自己的运行栈区，其他资源和父进程共享。</p>\n<h3 id=\"5、其他知识点：比如异常、对象生命周期、并发等后续会详解。\"><a href=\"#5、其他知识点：比如异常、对象生命周期、并发等后续会详解。\" class=\"headerlink\" title=\"5、其他知识点：比如异常、对象生命周期、并发等后续会详解。\"></a>5、其他知识点：比如异常、对象生命周期、并发等后续会详解。</h3>","site":{"data":{}},"excerpt":"<p>对象导论这一章花了两天看完，深有感触，使用百度脑图整理了简要知识点，并写下自己浅薄的认知！<br>","more":"<br><img src=\"/images/article/introduction/对象导论.png\" alt=\"对象导论\"><br>人与人之间通过语言交谈，人如果要控制计算机，就需要通过计算机看得懂的语言。也就是编程语言。编程语言发展：机器语言、汇编语言、高级语言（面向过程、面向对象）<br><img src=\"/images/article/introduction/语言图.jpg\" alt=\"编程语言\"></p>\n<h2 id=\"重要知识点\"><a href=\"#重要知识点\" class=\"headerlink\" title=\"重要知识点\"></a>重要知识点</h2><h3 id=\"1、面向过程和面向对象\"><a href=\"#1、面向过程和面向对象\" class=\"headerlink\" title=\"1、面向过程和面向对象\"></a>1、面向过程和面向对象</h3><p>面向过程：重视过程、把事务拆成步骤一步一步来。效率高<br>面向对象：把事务分成一个个对象，对象去实现最总结果。牺牲效率，提高重复性。<br>可以借助一个比喻：<br>面向过程：蛋炒饭。蛋饭混合，味道均匀可口，但是如果不喜欢其中某些材料（香菜，葱花），需要整盘倒掉重新再炒一份。<br>面向对象：盖浇饭。饭菜分离，想吃其他菜，继续加或者换掉。</p>\n<h3 id=\"2、面向对象的特性\"><a href=\"#2、面向对象的特性\" class=\"headerlink\" title=\"2、面向对象的特性\"></a>2、面向对象的特性</h3><p>抽象：程序为了解决现实世界的问题，抽象就是把现实世界的一类具有相同特性和行为的事物归为一类。数据抽象：对象属性（人的性别、年龄）；行为抽象：对象方法（人吃、睡）；<br>封装：封装具体实现细节。使用方不用关心我的实现细节，直接使用达到自己的目的。防止使用方干预提供方的实现细节。提供方修改实现细节不影响使用方。<br>继承：实现一类事物功能的复用及功能的扩展。<br>多态：在运行时决定调用子类行为还是父类行为。</p>\n<h3 id=\"3、接口和类、对象\"><a href=\"#3、接口和类、对象\" class=\"headerlink\" title=\"3、接口和类、对象\"></a>3、接口和类、对象</h3><p>具有相同特性和行为的一类事物就可以称谓类（class）。<br>接口是一种特殊的类（抽象的类、抽象属性、抽象方法）。<br>对象就是类的一个实现。<br>注：微服务中对外仅提供接口（隐藏自己的实现）。</p>\n<h3 id=\"4、线程和进程\"><a href=\"#4、线程和进程\" class=\"headerlink\" title=\"4、线程和进程\"></a>4、线程和进程</h3><p>进程：一次程序的运行过程。共享电脑的内存（4G）。每个进程会分一个虚拟的内存地址空间（4G），分为用户空间（3G）和内核空间（1G）；<br>线程：一个轻量级的进程。只是CPU调度单元。有自己的运行栈区，其他资源和父进程共享。</p>\n<h3 id=\"5、其他知识点：比如异常、对象生命周期、并发等后续会详解。\"><a href=\"#5、其他知识点：比如异常、对象生命周期、并发等后续会详解。\" class=\"headerlink\" title=\"5、其他知识点：比如异常、对象生命周期、并发等后续会详解。\"></a>5、其他知识点：比如异常、对象生命周期、并发等后续会详解。</h3>"},{"title":"最实用的Markdown教程","date":"2019-04-29T08:08:44.000Z","_content":"最近使用GitHub Pages搭建了自己的[个人博客](http://imzdong.github.io),特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。\n\n<!-- more -->\n\n> 最近使用GitHub Pages搭建了自己的[个人博客](http://imzdong.github.io),特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。\n\n### 一、什么是Markdown？\nMarkdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。说白了就是和Html语言一样，但是更加简化了。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档，更加简洁，更加符合人们的操作习惯。Markdown可以内嵌html语法\n> 示例：Html的段落是`<p/>`,而Markdown就是一个或多个空行。html的标题`<h1/>`,而Markdown就是`#`   \n\n### 二、Markdown基本用法\n\n从大家写文章的习惯讲起吧！  \n###### 1、标题\n标题要区分于普通段落。Markdown的标题使用`#`可以表示1-6级标题。`=`一级标题，`-`二级标题（任何数量的`=`和`-`都可以有效果，最好三个及以上，比较直观）。\n示例：\n> `#` 一级标题\n> `##` 二级标题\n> `###` 三级标题\n> 一级标题\n> `===========`\n> 二级标题\n> `---------`\n> 注意：'#'和标题中间要有空格，'='或者'-'在文字底\n\n效果：\n![图片](/images/article/markdown/2.jpg)\n\n###### 2、段落和换行\n一个Markdown段落的前后要有一个以上的空行。普通段落不该用空格或制表符来缩进。如果想在段前加缩进`&emsp;`是一个中文字符,`&ensp;`是半个中文字符`&nbsp;`是1/4中文字符。换行在需要换行后面至少有两个以上的空格+回车。\n> 注：不同的Markdown解释器段落和换行实现也不同，但基本上都是空行决定段落，空格+回车决定换行。多个`&emsp;`、`&ensp;`或者`&nbsp;`表示缩进。\n\n###### 3、文字\nMarkdown简化了Html，但是也丢失了一些字体的设置。<font color=#FF0000 >注：使用其他字体的设置可以直接内嵌html语法</font>\n示例：\n> `**`加粗`**`\n> `*`斜体`*`\n> `***`斜体加粗`***`\n> `~~`删除线`~~`\n\n效果：\n> **加粗**\n> *斜体*\n> ***斜体加粗***\n> ~~删除线~~\n\n内嵌html语法支持字体颜色:\n示例：\n> `<font color=#FF0000 >`红色`</font>`\n> `<font color=#008000 >`绿色`</font>`\n> `<font color=#0000FF >`蓝色`</font>`\n\n效果：\n\n> <font color=#FF0000 >红色</font>\n> <font color=#008000 >绿色</font>\n> <font color=#0000FF >蓝色</font>\n\n###### 4、引用\n一个或多个`>`在引用文字前\n示例：\n> `>`引用\n> `>>`引用\n> `>>>`引用\n\n效果：\n> >引用\n> >>引用\n> >>>引用\n\n###### 5、分割线\n三个或者三个以上的 - 或者 * 都可以。\n示例：\n> `---`\n> 横线分割线\n> `***`\n> 星分割线\n\n效果：\n> ---\n> 横线分割线\n> ***\n> 星分割线\n\n###### 6、超链接\n示例：\n> `[超链接名](超链接地址 \"超链接title\")`\n> `title可加可不加`\n> `[Winter的博客](https://imzdong.com)`\n> `[百度](https://www.baidu.com)`\n\n效果：\n> [Winter的博客](https://imzdong.com)\n> [百度](https://www.baidu.com)\n\n###### 7、图片\n超链接的加强版\n> `![图片名称](图片地址)`\n> `![图片](/images/article/markdown/1.jpg)`\n\n效果：\n![图片](/images/article/markdown/1.jpg)\n\n###### 8、列表\n有序列表（数字+`.`）\n> `1. 我有一个梦想`\n> `2. 我有两个梦想`\n> `3. 我有三个梦想`\n\n效果：\n> 1. 我有一个梦想\n> 2. 我有两个梦想\n> 3. 我有三个梦想\n\n无序列表(`*`、`+`、`-`)\n> `* 使用【星号】标识无序列表`\n> `* 使用【星号】标识无序列表`\n> `* 使用【星号】标识无序列表`\n> `+ 使用【加号】标识无序列表`\n> `+ 使用【加号】标识无序列表`\n> `+ 使用【加号】标识无序列表`\n> `- 使用【减号】标识无序列表`\n> `- 使用【减号】标识无序列表`\n> `- 使用【减号】标识无序列表`\n\n效果：\n> * 使用【星号】标识无序列表\n> * 使用【星号】标识无序列表\n> * 使用【星号】标识无序列表\n> + 使用【加号】标识无序列表\n> + 使用【加号】标识无序列表\n> + 使用【加号】标识无序列表\n> - 使用【减号】标识无序列表\n> - 使用【减号】标识无序列表\n> - 使用【减号】标识无序列表\n\n> <font color=#FF0000 >注：有序列表和无序列表可以嵌套使用</font>\n\n###### 9、表格\n语法：\n> `表头|表头|表头`\n> `---|:--:|---:`\n> `内容|内容|内容`\n> `内容|内容|内容`\n>  第二行分割表头和内容。  - 有一个就行，为了对齐，多加了几个\n  文字默认居左\n  -两边加：表示文字居中\n  -右边加：表示文字居右\n  注：原生的语法两边都要用 | 包起来。此处省略\n\n示例\n> `第一格表头 | 第二格表头| 第三个表头`\n> `---------| :-------------:|-----:`\n> `内容单元格 第一列第一格 | 内容单元格第二列第一格(居中)|内容单元格第三列列第一格(居右)`\n> `内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格(居中)|内容单元格第三列列第二格(居右)`\n> `内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格(居中)|内容单元格第三列列第三格(居右)`\n> `内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格(居中)|内容单元格第三列列第四格(居右)`  \n\n效果：\n\n第一格表头 | 第二格表头| 第三个表头\n---------| :-------------:|-----:\n内容单元格 第一列第一格 | 内容单元格第二列第一格(居中)|内容单元格第三列列第一格(居右)\n内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格(居中)|内容单元格第三列列第二格(居右)\n内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格(居中)|内容单元格第三列列第三格(居右)\n内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格(居中)|内容单元格第三列列第四格(居右)\n\n###### 10、代码\n语法\n> 单行代码：\n> &lsquo;代码内容&rsquo;\n> 代码块： \n> &lsquo;&lsquo;&lsquo;\n> 代码块内容\n> &lsquo;&lsquo;&lsquo;\n\n示例：\n> &lsquo;com.winter&rsquo;\n![代码块](/images/article/markdown/3.jpg)\n\n效果：\n> `com.winter`\n```\npackage com.winter;\n/**\n * Winter\n */\npublic class Code {\n    public static void main(String[] args)throws Exception{\n        System.out.println(\"HelloWorld\");\n    }\n}\n```\n\n###### 11、流程图\nMarkdown的流程图是各个编辑器支持的不同，大家需要看各个编辑器的支持文档。\n[我的博客](https://imzdong.com)使用的[Hexo](https://hexo.io/zh-cn/)，[Hexo](https://hexo.io/zh-cn/)常用的流程图插件：\n+ [hexo-filter-mermaid-diagrams](https://github.com/webappdevelp/hexo-filter-mermaid-diagrams)\n+ [hexo-filter-flowchart](http://flowchart.js.org/) [GitHub](https://github.com/bubkoo/hexo-filter-flowchart)\n+ [hexo-filter-sequence](https://mermaidjs.github.io/sequenceDiagram.html) [GitHub](https://github.com/bubkoo/hexo-filter-sequence)\n\n下面使用[hexo-filter-mermaid-diagrams](https://github.com/webappdevelp/hexo-filter-mermaid-diagrams)\n示例：\n> &lsquo;&lsquo;&lsquo;mermaid\n    graph TD;\n        A-->B;\n        A-->C;\n        B-->D;\n        C-->D; \n  &lsquo;&lsquo;&lsquo;\n  \n效果：\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;  \n```\n\n###### 12、注意\nMarkdown简化了用户的操作，所以复杂的、花里胡哨需要Markdown和内嵌的Html语句相结合（比如：字体颜色，字体大小等）。一些流程图、目录也需要借助于其他的插件或者编辑器。没有万能的简单的语法，大家相结合使用高效快速的完成博客文档的编辑。\n祝大家好运！","source":"_posts/2019-04-29-Markdown.md","raw":"---\ntitle: 最实用的Markdown教程\ndate: 2019-04-29 16:08:44\ncategories: \n- 技术\ntags:\n- Markdown\n---\n最近使用GitHub Pages搭建了自己的[个人博客](http://imzdong.github.io),特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。\n\n<!-- more -->\n\n> 最近使用GitHub Pages搭建了自己的[个人博客](http://imzdong.github.io),特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。\n\n### 一、什么是Markdown？\nMarkdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。说白了就是和Html语言一样，但是更加简化了。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档，更加简洁，更加符合人们的操作习惯。Markdown可以内嵌html语法\n> 示例：Html的段落是`<p/>`,而Markdown就是一个或多个空行。html的标题`<h1/>`,而Markdown就是`#`   \n\n### 二、Markdown基本用法\n\n从大家写文章的习惯讲起吧！  \n###### 1、标题\n标题要区分于普通段落。Markdown的标题使用`#`可以表示1-6级标题。`=`一级标题，`-`二级标题（任何数量的`=`和`-`都可以有效果，最好三个及以上，比较直观）。\n示例：\n> `#` 一级标题\n> `##` 二级标题\n> `###` 三级标题\n> 一级标题\n> `===========`\n> 二级标题\n> `---------`\n> 注意：'#'和标题中间要有空格，'='或者'-'在文字底\n\n效果：\n![图片](/images/article/markdown/2.jpg)\n\n###### 2、段落和换行\n一个Markdown段落的前后要有一个以上的空行。普通段落不该用空格或制表符来缩进。如果想在段前加缩进`&emsp;`是一个中文字符,`&ensp;`是半个中文字符`&nbsp;`是1/4中文字符。换行在需要换行后面至少有两个以上的空格+回车。\n> 注：不同的Markdown解释器段落和换行实现也不同，但基本上都是空行决定段落，空格+回车决定换行。多个`&emsp;`、`&ensp;`或者`&nbsp;`表示缩进。\n\n###### 3、文字\nMarkdown简化了Html，但是也丢失了一些字体的设置。<font color=#FF0000 >注：使用其他字体的设置可以直接内嵌html语法</font>\n示例：\n> `**`加粗`**`\n> `*`斜体`*`\n> `***`斜体加粗`***`\n> `~~`删除线`~~`\n\n效果：\n> **加粗**\n> *斜体*\n> ***斜体加粗***\n> ~~删除线~~\n\n内嵌html语法支持字体颜色:\n示例：\n> `<font color=#FF0000 >`红色`</font>`\n> `<font color=#008000 >`绿色`</font>`\n> `<font color=#0000FF >`蓝色`</font>`\n\n效果：\n\n> <font color=#FF0000 >红色</font>\n> <font color=#008000 >绿色</font>\n> <font color=#0000FF >蓝色</font>\n\n###### 4、引用\n一个或多个`>`在引用文字前\n示例：\n> `>`引用\n> `>>`引用\n> `>>>`引用\n\n效果：\n> >引用\n> >>引用\n> >>>引用\n\n###### 5、分割线\n三个或者三个以上的 - 或者 * 都可以。\n示例：\n> `---`\n> 横线分割线\n> `***`\n> 星分割线\n\n效果：\n> ---\n> 横线分割线\n> ***\n> 星分割线\n\n###### 6、超链接\n示例：\n> `[超链接名](超链接地址 \"超链接title\")`\n> `title可加可不加`\n> `[Winter的博客](https://imzdong.com)`\n> `[百度](https://www.baidu.com)`\n\n效果：\n> [Winter的博客](https://imzdong.com)\n> [百度](https://www.baidu.com)\n\n###### 7、图片\n超链接的加强版\n> `![图片名称](图片地址)`\n> `![图片](/images/article/markdown/1.jpg)`\n\n效果：\n![图片](/images/article/markdown/1.jpg)\n\n###### 8、列表\n有序列表（数字+`.`）\n> `1. 我有一个梦想`\n> `2. 我有两个梦想`\n> `3. 我有三个梦想`\n\n效果：\n> 1. 我有一个梦想\n> 2. 我有两个梦想\n> 3. 我有三个梦想\n\n无序列表(`*`、`+`、`-`)\n> `* 使用【星号】标识无序列表`\n> `* 使用【星号】标识无序列表`\n> `* 使用【星号】标识无序列表`\n> `+ 使用【加号】标识无序列表`\n> `+ 使用【加号】标识无序列表`\n> `+ 使用【加号】标识无序列表`\n> `- 使用【减号】标识无序列表`\n> `- 使用【减号】标识无序列表`\n> `- 使用【减号】标识无序列表`\n\n效果：\n> * 使用【星号】标识无序列表\n> * 使用【星号】标识无序列表\n> * 使用【星号】标识无序列表\n> + 使用【加号】标识无序列表\n> + 使用【加号】标识无序列表\n> + 使用【加号】标识无序列表\n> - 使用【减号】标识无序列表\n> - 使用【减号】标识无序列表\n> - 使用【减号】标识无序列表\n\n> <font color=#FF0000 >注：有序列表和无序列表可以嵌套使用</font>\n\n###### 9、表格\n语法：\n> `表头|表头|表头`\n> `---|:--:|---:`\n> `内容|内容|内容`\n> `内容|内容|内容`\n>  第二行分割表头和内容。  - 有一个就行，为了对齐，多加了几个\n  文字默认居左\n  -两边加：表示文字居中\n  -右边加：表示文字居右\n  注：原生的语法两边都要用 | 包起来。此处省略\n\n示例\n> `第一格表头 | 第二格表头| 第三个表头`\n> `---------| :-------------:|-----:`\n> `内容单元格 第一列第一格 | 内容单元格第二列第一格(居中)|内容单元格第三列列第一格(居右)`\n> `内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格(居中)|内容单元格第三列列第二格(居右)`\n> `内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格(居中)|内容单元格第三列列第三格(居右)`\n> `内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格(居中)|内容单元格第三列列第四格(居右)`  \n\n效果：\n\n第一格表头 | 第二格表头| 第三个表头\n---------| :-------------:|-----:\n内容单元格 第一列第一格 | 内容单元格第二列第一格(居中)|内容单元格第三列列第一格(居右)\n内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格(居中)|内容单元格第三列列第二格(居右)\n内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格(居中)|内容单元格第三列列第三格(居右)\n内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格(居中)|内容单元格第三列列第四格(居右)\n\n###### 10、代码\n语法\n> 单行代码：\n> &lsquo;代码内容&rsquo;\n> 代码块： \n> &lsquo;&lsquo;&lsquo;\n> 代码块内容\n> &lsquo;&lsquo;&lsquo;\n\n示例：\n> &lsquo;com.winter&rsquo;\n![代码块](/images/article/markdown/3.jpg)\n\n效果：\n> `com.winter`\n```\npackage com.winter;\n/**\n * Winter\n */\npublic class Code {\n    public static void main(String[] args)throws Exception{\n        System.out.println(\"HelloWorld\");\n    }\n}\n```\n\n###### 11、流程图\nMarkdown的流程图是各个编辑器支持的不同，大家需要看各个编辑器的支持文档。\n[我的博客](https://imzdong.com)使用的[Hexo](https://hexo.io/zh-cn/)，[Hexo](https://hexo.io/zh-cn/)常用的流程图插件：\n+ [hexo-filter-mermaid-diagrams](https://github.com/webappdevelp/hexo-filter-mermaid-diagrams)\n+ [hexo-filter-flowchart](http://flowchart.js.org/) [GitHub](https://github.com/bubkoo/hexo-filter-flowchart)\n+ [hexo-filter-sequence](https://mermaidjs.github.io/sequenceDiagram.html) [GitHub](https://github.com/bubkoo/hexo-filter-sequence)\n\n下面使用[hexo-filter-mermaid-diagrams](https://github.com/webappdevelp/hexo-filter-mermaid-diagrams)\n示例：\n> &lsquo;&lsquo;&lsquo;mermaid\n    graph TD;\n        A-->B;\n        A-->C;\n        B-->D;\n        C-->D; \n  &lsquo;&lsquo;&lsquo;\n  \n效果：\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;  \n```\n\n###### 12、注意\nMarkdown简化了用户的操作，所以复杂的、花里胡哨需要Markdown和内嵌的Html语句相结合（比如：字体颜色，字体大小等）。一些流程图、目录也需要借助于其他的插件或者编辑器。没有万能的简单的语法，大家相结合使用高效快速的完成博客文档的编辑。\n祝大家好运！","slug":"2019-04-29-Markdown","published":1,"updated":"2019-05-09T05:21:31.779Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck2aft5kp000muwtknm5d7gmv","content":"<p>最近使用GitHub Pages搭建了自己的<a href=\"http://imzdong.github.io\">个人博客</a>,特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>最近使用GitHub Pages搭建了自己的<a href=\"http://imzdong.github.io\">个人博客</a>,特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。</p>\n</blockquote>\n<h3 id=\"一、什么是Markdown？\"><a href=\"#一、什么是Markdown？\" class=\"headerlink\" title=\"一、什么是Markdown？\"></a>一、什么是Markdown？</h3><p>Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。说白了就是和Html语言一样，但是更加简化了。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档，更加简洁，更加符合人们的操作习惯。Markdown可以内嵌html语法</p>\n<blockquote>\n<p>示例：Html的段落是<code>&lt;p/&gt;</code>,而Markdown就是一个或多个空行。html的标题<code>&lt;h1/&gt;</code>,而Markdown就是<code>#</code>   </p>\n</blockquote>\n<h3 id=\"二、Markdown基本用法\"><a href=\"#二、Markdown基本用法\" class=\"headerlink\" title=\"二、Markdown基本用法\"></a>二、Markdown基本用法</h3><p>从大家写文章的习惯讲起吧！  </p>\n<h6 id=\"1、标题\"><a href=\"#1、标题\" class=\"headerlink\" title=\"1、标题\"></a>1、标题</h6><p>标题要区分于普通段落。Markdown的标题使用<code>#</code>可以表示1-6级标题。<code>=</code>一级标题，<code>-</code>二级标题（任何数量的<code>=</code>和<code>-</code>都可以有效果，最好三个及以上，比较直观）。<br>示例：</p>\n<blockquote>\n<p><code>#</code> 一级标题<br><code>##</code> 二级标题<br><code>###</code> 三级标题<br>一级标题<br><code>===========</code><br>二级标题<br><code>---------</code><br>注意：’#’和标题中间要有空格，’=’或者’-‘在文字底</p>\n</blockquote>\n<p>效果：<br><img src=\"/images/article/markdown/2.jpg\" alt=\"图片\"></p>\n<h6 id=\"2、段落和换行\"><a href=\"#2、段落和换行\" class=\"headerlink\" title=\"2、段落和换行\"></a>2、段落和换行</h6><p>一个Markdown段落的前后要有一个以上的空行。普通段落不该用空格或制表符来缩进。如果想在段前加缩进<code>&amp;emsp;</code>是一个中文字符,<code>&amp;ensp;</code>是半个中文字符<code>&amp;nbsp;</code>是1/4中文字符。换行在需要换行后面至少有两个以上的空格+回车。</p>\n<blockquote>\n<p>注：不同的Markdown解释器段落和换行实现也不同，但基本上都是空行决定段落，空格+回车决定换行。多个<code>&amp;emsp;</code>、<code>&amp;ensp;</code>或者<code>&amp;nbsp;</code>表示缩进。</p>\n</blockquote>\n<h6 id=\"3、文字\"><a href=\"#3、文字\" class=\"headerlink\" title=\"3、文字\"></a>3、文字</h6><p>Markdown简化了Html，但是也丢失了一些字体的设置。<font color=\"#FF0000\">注：使用其他字体的设置可以直接内嵌html语法</font><br>示例：</p>\n<blockquote>\n<p><code>**</code>加粗<code>**</code><br><code>*</code>斜体<code>*</code><br><code>***</code>斜体加粗<code>***</code><br><code>~~</code>删除线<code>~~</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><strong>加粗</strong><br><em>斜体</em><br><strong><em>斜体加粗</em></strong><br><del>删除线</del></p>\n</blockquote>\n<p>内嵌html语法支持字体颜色:<br>示例：</p>\n<blockquote>\n<p><code>&lt;font color=#FF0000 &gt;</code>红色<code>&lt;/font&gt;</code><br><code>&lt;font color=#008000 &gt;</code>绿色<code>&lt;/font&gt;</code><br><code>&lt;font color=#0000FF &gt;</code>蓝色<code>&lt;/font&gt;</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<font color=\"#FF0000\">红色</font><br><font color=\"#008000\">绿色</font><br><font color=\"#0000FF\">蓝色</font>\n</blockquote>\n<h6 id=\"4、引用\"><a href=\"#4、引用\" class=\"headerlink\" title=\"4、引用\"></a>4、引用</h6><p>一个或多个<code>&gt;</code>在引用文字前<br>示例：</p>\n<blockquote>\n<p><code>&gt;</code>引用<br><code>&gt;&gt;</code>引用<br><code>&gt;&gt;&gt;</code>引用</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<blockquote>\n<p>引用</p>\n<blockquote>\n<p>引用</p>\n<blockquote>\n<p>引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h6 id=\"5、分割线\"><a href=\"#5、分割线\" class=\"headerlink\" title=\"5、分割线\"></a>5、分割线</h6><p>三个或者三个以上的 - 或者 * 都可以。<br>示例：</p>\n<blockquote>\n<p><code>---</code><br>横线分割线<br><code>***</code><br>星分割线</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<hr>\n<p>横线分割线</p>\n<hr>\n<p>星分割线</p>\n</blockquote>\n<h6 id=\"6、超链接\"><a href=\"#6、超链接\" class=\"headerlink\" title=\"6、超链接\"></a>6、超链接</h6><p>示例：</p>\n<blockquote>\n<p><code>[超链接名](超链接地址 &quot;超链接title&quot;)</code><br><code>title可加可不加</code><br><code>[Winter的博客](https://imzdong.com)</code><br><code>[百度](https://www.baidu.com)</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><a href=\"https://imzdong.com\">Winter的博客</a><br><a href=\"https://www.baidu.com\">百度</a></p>\n</blockquote>\n<h6 id=\"7、图片\"><a href=\"#7、图片\" class=\"headerlink\" title=\"7、图片\"></a>7、图片</h6><p>超链接的加强版</p>\n<blockquote>\n<p><code>![图片名称](图片地址)</code><br><code>![图片](/images/article/markdown/1.jpg)</code></p>\n</blockquote>\n<p>效果：<br><img src=\"/images/article/markdown/1.jpg\" alt=\"图片\"></p>\n<h6 id=\"8、列表\"><a href=\"#8、列表\" class=\"headerlink\" title=\"8、列表\"></a>8、列表</h6><p>有序列表（数字+<code>.</code>）</p>\n<blockquote>\n<p><code>1. 我有一个梦想</code><br><code>2. 我有两个梦想</code><br><code>3. 我有三个梦想</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<ol>\n<li>我有一个梦想</li>\n<li>我有两个梦想</li>\n<li>我有三个梦想</li>\n</ol>\n</blockquote>\n<p>无序列表(<code>*</code>、<code>+</code>、<code>-</code>)</p>\n<blockquote>\n<p><code>* 使用【星号】标识无序列表</code><br><code>* 使用【星号】标识无序列表</code><br><code>* 使用【星号】标识无序列表</code><br><code>+ 使用【加号】标识无序列表</code><br><code>+ 使用【加号】标识无序列表</code><br><code>+ 使用【加号】标识无序列表</code><br><code>- 使用【减号】标识无序列表</code><br><code>- 使用【减号】标识无序列表</code><br><code>- 使用【减号】标识无序列表</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<ul>\n<li>使用【星号】标识无序列表</li>\n<li>使用【星号】标识无序列表</li>\n<li>使用【星号】标识无序列表</li>\n</ul>\n<ul>\n<li>使用【加号】标识无序列表</li>\n<li>使用【加号】标识无序列表</li>\n<li>使用【加号】标识无序列表</li>\n</ul>\n<ul>\n<li>使用【减号】标识无序列表</li>\n<li>使用【减号】标识无序列表</li>\n<li>使用【减号】标识无序列表</li>\n</ul>\n</blockquote>\n<blockquote>\n<font color=\"#FF0000\">注：有序列表和无序列表可以嵌套使用</font>\n</blockquote>\n<h6 id=\"9、表格\"><a href=\"#9、表格\" class=\"headerlink\" title=\"9、表格\"></a>9、表格</h6><p>语法：</p>\n<blockquote>\n<p><code>表头|表头|表头</code><br><code>---|:--:|---:</code><br><code>内容|内容|内容</code><br><code>内容|内容|内容</code><br> 第二行分割表头和内容。  - 有一个就行，为了对齐，多加了几个<br>  文字默认居左<br>  -两边加：表示文字居中<br>  -右边加：表示文字居右<br>  注：原生的语法两边都要用 | 包起来。此处省略</p>\n</blockquote>\n<p>示例</p>\n<blockquote>\n<p><code>第一格表头 | 第二格表头| 第三个表头</code><br><code>---------| :-------------:|-----:</code><br><code>内容单元格 第一列第一格 | 内容单元格第二列第一格(居中)|内容单元格第三列列第一格(居右)</code><br><code>内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格(居中)|内容单元格第三列列第二格(居右)</code><br><code>内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格(居中)|内容单元格第三列列第三格(居右)</code><br><code>内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格(居中)|内容单元格第三列列第四格(居右)</code>  </p>\n</blockquote>\n<p>效果：</p>\n<table>\n<thead>\n<tr>\n<th>第一格表头</th>\n<th style=\"text-align:center\">第二格表头</th>\n<th style=\"text-align:right\">第三个表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内容单元格 第一列第一格</td>\n<td style=\"text-align:center\">内容单元格第二列第一格(居中)</td>\n<td style=\"text-align:right\">内容单元格第三列列第一格(居右)</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第二格 多加文字</td>\n<td style=\"text-align:center\">内容单元格第二列第二格(居中)</td>\n<td style=\"text-align:right\">内容单元格第三列列第二格(居右)</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第三格 多加文字</td>\n<td style=\"text-align:center\">内容单元格第二列第三格(居中)</td>\n<td style=\"text-align:right\">内容单元格第三列列第三格(居右)</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第四格 多加文字</td>\n<td style=\"text-align:center\">内容单元格第二列第四格(居中)</td>\n<td style=\"text-align:right\">内容单元格第三列列第四格(居右)</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"10、代码\"><a href=\"#10、代码\" class=\"headerlink\" title=\"10、代码\"></a>10、代码</h6><p>语法</p>\n<blockquote>\n<p>单行代码：<br>&lsquo;代码内容&rsquo;<br>代码块：<br>&lsquo;&lsquo;&lsquo;<br>代码块内容<br>&lsquo;&lsquo;&lsquo;</p>\n</blockquote>\n<p>示例：</p>\n<blockquote>\n<p>&lsquo;com.winter&rsquo;<br><img src=\"/images/article/markdown/3.jpg\" alt=\"代码块\"></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><code>com.winter</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.winter;</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Winter</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class Code &#123;</span><br><span class=\"line\">    public static void main(String[] args)throws Exception&#123;</span><br><span class=\"line\">        System.out.println(&quot;HelloWorld&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h6 id=\"11、流程图\"><a href=\"#11、流程图\" class=\"headerlink\" title=\"11、流程图\"></a>11、流程图</h6><p>Markdown的流程图是各个编辑器支持的不同，大家需要看各个编辑器的支持文档。<br><a href=\"https://imzdong.com\">我的博客</a>使用的<a href=\"https://hexo.io/zh-cn/\">Hexo</a>，<a href=\"https://hexo.io/zh-cn/\">Hexo</a>常用的流程图插件：</p>\n<ul>\n<li><a href=\"https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\">hexo-filter-mermaid-diagrams</a></li>\n<li><a href=\"http://flowchart.js.org/\">hexo-filter-flowchart</a> <a href=\"https://github.com/bubkoo/hexo-filter-flowchart\">GitHub</a></li>\n<li><a href=\"https://mermaidjs.github.io/sequenceDiagram.html\">hexo-filter-sequence</a> <a href=\"https://github.com/bubkoo/hexo-filter-sequence\">GitHub</a></li>\n</ul>\n<p>下面使用<a href=\"https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\">hexo-filter-mermaid-diagrams</a><br>示例：</p>\n<blockquote>\n<p>&lsquo;&lsquo;&lsquo;mermaid<br>    graph TD;<br>        A–&gt;B;<br>        A–&gt;C;<br>        B–&gt;D;<br>        C–&gt;D;<br>  &lsquo;&lsquo;&lsquo;</p>\n</blockquote>\n<p>效果：</p>\n<pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<h6 id=\"12、注意\"><a href=\"#12、注意\" class=\"headerlink\" title=\"12、注意\"></a>12、注意</h6><p>Markdown简化了用户的操作，所以复杂的、花里胡哨需要Markdown和内嵌的Html语句相结合（比如：字体颜色，字体大小等）。一些流程图、目录也需要借助于其他的插件或者编辑器。没有万能的简单的语法，大家相结合使用高效快速的完成博客文档的编辑。<br>祝大家好运！</p>\n","site":{"data":{}},"excerpt":"<p>最近使用GitHub Pages搭建了自己的<a href=\"http://imzdong.github.io\">个人博客</a>,特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。</p>","more":"<blockquote>\n<p>最近使用GitHub Pages搭建了自己的<a href=\"http://imzdong.github.io\">个人博客</a>,特别好用。打算重拾写博客的习惯，发现大家都在用markdown语法，就研究研究，记下此篇。</p>\n</blockquote>\n<h3 id=\"一、什么是Markdown？\"><a href=\"#一、什么是Markdown？\" class=\"headerlink\" title=\"一、什么是Markdown？\"></a>一、什么是Markdown？</h3><p>Markdown是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。说白了就是和Html语言一样，但是更加简化了。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档，更加简洁，更加符合人们的操作习惯。Markdown可以内嵌html语法</p>\n<blockquote>\n<p>示例：Html的段落是<code>&lt;p/&gt;</code>,而Markdown就是一个或多个空行。html的标题<code>&lt;h1/&gt;</code>,而Markdown就是<code>#</code>   </p>\n</blockquote>\n<h3 id=\"二、Markdown基本用法\"><a href=\"#二、Markdown基本用法\" class=\"headerlink\" title=\"二、Markdown基本用法\"></a>二、Markdown基本用法</h3><p>从大家写文章的习惯讲起吧！  </p>\n<h6 id=\"1、标题\"><a href=\"#1、标题\" class=\"headerlink\" title=\"1、标题\"></a>1、标题</h6><p>标题要区分于普通段落。Markdown的标题使用<code>#</code>可以表示1-6级标题。<code>=</code>一级标题，<code>-</code>二级标题（任何数量的<code>=</code>和<code>-</code>都可以有效果，最好三个及以上，比较直观）。<br>示例：</p>\n<blockquote>\n<p><code>#</code> 一级标题<br><code>##</code> 二级标题<br><code>###</code> 三级标题<br>一级标题<br><code>===========</code><br>二级标题<br><code>---------</code><br>注意：’#’和标题中间要有空格，’=’或者’-‘在文字底</p>\n</blockquote>\n<p>效果：<br><img src=\"/images/article/markdown/2.jpg\" alt=\"图片\"></p>\n<h6 id=\"2、段落和换行\"><a href=\"#2、段落和换行\" class=\"headerlink\" title=\"2、段落和换行\"></a>2、段落和换行</h6><p>一个Markdown段落的前后要有一个以上的空行。普通段落不该用空格或制表符来缩进。如果想在段前加缩进<code>&amp;emsp;</code>是一个中文字符,<code>&amp;ensp;</code>是半个中文字符<code>&amp;nbsp;</code>是1/4中文字符。换行在需要换行后面至少有两个以上的空格+回车。</p>\n<blockquote>\n<p>注：不同的Markdown解释器段落和换行实现也不同，但基本上都是空行决定段落，空格+回车决定换行。多个<code>&amp;emsp;</code>、<code>&amp;ensp;</code>或者<code>&amp;nbsp;</code>表示缩进。</p>\n</blockquote>\n<h6 id=\"3、文字\"><a href=\"#3、文字\" class=\"headerlink\" title=\"3、文字\"></a>3、文字</h6><p>Markdown简化了Html，但是也丢失了一些字体的设置。<font color=\"#FF0000\">注：使用其他字体的设置可以直接内嵌html语法</font><br>示例：</p>\n<blockquote>\n<p><code>**</code>加粗<code>**</code><br><code>*</code>斜体<code>*</code><br><code>***</code>斜体加粗<code>***</code><br><code>~~</code>删除线<code>~~</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><strong>加粗</strong><br><em>斜体</em><br><strong><em>斜体加粗</em></strong><br><del>删除线</del></p>\n</blockquote>\n<p>内嵌html语法支持字体颜色:<br>示例：</p>\n<blockquote>\n<p><code>&lt;font color=#FF0000 &gt;</code>红色<code>&lt;/font&gt;</code><br><code>&lt;font color=#008000 &gt;</code>绿色<code>&lt;/font&gt;</code><br><code>&lt;font color=#0000FF &gt;</code>蓝色<code>&lt;/font&gt;</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<font color=\"#FF0000\">红色</font><br><font color=\"#008000\">绿色</font><br><font color=\"#0000FF\">蓝色</font>\n</blockquote>\n<h6 id=\"4、引用\"><a href=\"#4、引用\" class=\"headerlink\" title=\"4、引用\"></a>4、引用</h6><p>一个或多个<code>&gt;</code>在引用文字前<br>示例：</p>\n<blockquote>\n<p><code>&gt;</code>引用<br><code>&gt;&gt;</code>引用<br><code>&gt;&gt;&gt;</code>引用</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<blockquote>\n<p>引用</p>\n<blockquote>\n<p>引用</p>\n<blockquote>\n<p>引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h6 id=\"5、分割线\"><a href=\"#5、分割线\" class=\"headerlink\" title=\"5、分割线\"></a>5、分割线</h6><p>三个或者三个以上的 - 或者 * 都可以。<br>示例：</p>\n<blockquote>\n<p><code>---</code><br>横线分割线<br><code>***</code><br>星分割线</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<hr>\n<p>横线分割线</p>\n<hr>\n<p>星分割线</p>\n</blockquote>\n<h6 id=\"6、超链接\"><a href=\"#6、超链接\" class=\"headerlink\" title=\"6、超链接\"></a>6、超链接</h6><p>示例：</p>\n<blockquote>\n<p><code>[超链接名](超链接地址 &quot;超链接title&quot;)</code><br><code>title可加可不加</code><br><code>[Winter的博客](https://imzdong.com)</code><br><code>[百度](https://www.baidu.com)</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><a href=\"https://imzdong.com\">Winter的博客</a><br><a href=\"https://www.baidu.com\">百度</a></p>\n</blockquote>\n<h6 id=\"7、图片\"><a href=\"#7、图片\" class=\"headerlink\" title=\"7、图片\"></a>7、图片</h6><p>超链接的加强版</p>\n<blockquote>\n<p><code>![图片名称](图片地址)</code><br><code>![图片](/images/article/markdown/1.jpg)</code></p>\n</blockquote>\n<p>效果：<br><img src=\"/images/article/markdown/1.jpg\" alt=\"图片\"></p>\n<h6 id=\"8、列表\"><a href=\"#8、列表\" class=\"headerlink\" title=\"8、列表\"></a>8、列表</h6><p>有序列表（数字+<code>.</code>）</p>\n<blockquote>\n<p><code>1. 我有一个梦想</code><br><code>2. 我有两个梦想</code><br><code>3. 我有三个梦想</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<ol>\n<li>我有一个梦想</li>\n<li>我有两个梦想</li>\n<li>我有三个梦想</li>\n</ol>\n</blockquote>\n<p>无序列表(<code>*</code>、<code>+</code>、<code>-</code>)</p>\n<blockquote>\n<p><code>* 使用【星号】标识无序列表</code><br><code>* 使用【星号】标识无序列表</code><br><code>* 使用【星号】标识无序列表</code><br><code>+ 使用【加号】标识无序列表</code><br><code>+ 使用【加号】标识无序列表</code><br><code>+ 使用【加号】标识无序列表</code><br><code>- 使用【减号】标识无序列表</code><br><code>- 使用【减号】标识无序列表</code><br><code>- 使用【减号】标识无序列表</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<ul>\n<li>使用【星号】标识无序列表</li>\n<li>使用【星号】标识无序列表</li>\n<li>使用【星号】标识无序列表</li>\n</ul>\n<ul>\n<li>使用【加号】标识无序列表</li>\n<li>使用【加号】标识无序列表</li>\n<li>使用【加号】标识无序列表</li>\n</ul>\n<ul>\n<li>使用【减号】标识无序列表</li>\n<li>使用【减号】标识无序列表</li>\n<li>使用【减号】标识无序列表</li>\n</ul>\n</blockquote>\n<blockquote>\n<font color=\"#FF0000\">注：有序列表和无序列表可以嵌套使用</font>\n</blockquote>\n<h6 id=\"9、表格\"><a href=\"#9、表格\" class=\"headerlink\" title=\"9、表格\"></a>9、表格</h6><p>语法：</p>\n<blockquote>\n<p><code>表头|表头|表头</code><br><code>---|:--:|---:</code><br><code>内容|内容|内容</code><br><code>内容|内容|内容</code><br> 第二行分割表头和内容。  - 有一个就行，为了对齐，多加了几个<br>  文字默认居左<br>  -两边加：表示文字居中<br>  -右边加：表示文字居右<br>  注：原生的语法两边都要用 | 包起来。此处省略</p>\n</blockquote>\n<p>示例</p>\n<blockquote>\n<p><code>第一格表头 | 第二格表头| 第三个表头</code><br><code>---------| :-------------:|-----:</code><br><code>内容单元格 第一列第一格 | 内容单元格第二列第一格(居中)|内容单元格第三列列第一格(居右)</code><br><code>内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格(居中)|内容单元格第三列列第二格(居右)</code><br><code>内容单元格 第一列第三格 多加文字 | 内容单元格第二列第三格(居中)|内容单元格第三列列第三格(居右)</code><br><code>内容单元格 第一列第四格 多加文字 | 内容单元格第二列第四格(居中)|内容单元格第三列列第四格(居右)</code>  </p>\n</blockquote>\n<p>效果：</p>\n<table>\n<thead>\n<tr>\n<th>第一格表头</th>\n<th style=\"text-align:center\">第二格表头</th>\n<th style=\"text-align:right\">第三个表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内容单元格 第一列第一格</td>\n<td style=\"text-align:center\">内容单元格第二列第一格(居中)</td>\n<td style=\"text-align:right\">内容单元格第三列列第一格(居右)</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第二格 多加文字</td>\n<td style=\"text-align:center\">内容单元格第二列第二格(居中)</td>\n<td style=\"text-align:right\">内容单元格第三列列第二格(居右)</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第三格 多加文字</td>\n<td style=\"text-align:center\">内容单元格第二列第三格(居中)</td>\n<td style=\"text-align:right\">内容单元格第三列列第三格(居右)</td>\n</tr>\n<tr>\n<td>内容单元格 第一列第四格 多加文字</td>\n<td style=\"text-align:center\">内容单元格第二列第四格(居中)</td>\n<td style=\"text-align:right\">内容单元格第三列列第四格(居右)</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"10、代码\"><a href=\"#10、代码\" class=\"headerlink\" title=\"10、代码\"></a>10、代码</h6><p>语法</p>\n<blockquote>\n<p>单行代码：<br>&lsquo;代码内容&rsquo;<br>代码块：<br>&lsquo;&lsquo;&lsquo;<br>代码块内容<br>&lsquo;&lsquo;&lsquo;</p>\n</blockquote>\n<p>示例：</p>\n<blockquote>\n<p>&lsquo;com.winter&rsquo;<br><img src=\"/images/article/markdown/3.jpg\" alt=\"代码块\"></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><code>com.winter</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.winter;</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Winter</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class Code &#123;</span><br><span class=\"line\">    public static void main(String[] args)throws Exception&#123;</span><br><span class=\"line\">        System.out.println(&quot;HelloWorld&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h6 id=\"11、流程图\"><a href=\"#11、流程图\" class=\"headerlink\" title=\"11、流程图\"></a>11、流程图</h6><p>Markdown的流程图是各个编辑器支持的不同，大家需要看各个编辑器的支持文档。<br><a href=\"https://imzdong.com\">我的博客</a>使用的<a href=\"https://hexo.io/zh-cn/\">Hexo</a>，<a href=\"https://hexo.io/zh-cn/\">Hexo</a>常用的流程图插件：</p>\n<ul>\n<li><a href=\"https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\">hexo-filter-mermaid-diagrams</a></li>\n<li><a href=\"http://flowchart.js.org/\">hexo-filter-flowchart</a> <a href=\"https://github.com/bubkoo/hexo-filter-flowchart\">GitHub</a></li>\n<li><a href=\"https://mermaidjs.github.io/sequenceDiagram.html\">hexo-filter-sequence</a> <a href=\"https://github.com/bubkoo/hexo-filter-sequence\">GitHub</a></li>\n</ul>\n<p>下面使用<a href=\"https://github.com/webappdevelp/hexo-filter-mermaid-diagrams\">hexo-filter-mermaid-diagrams</a><br>示例：</p>\n<blockquote>\n<p>&lsquo;&lsquo;&lsquo;mermaid<br>    graph TD;<br>        A–&gt;B;<br>        A–&gt;C;<br>        B–&gt;D;<br>        C–&gt;D;<br>  &lsquo;&lsquo;&lsquo;</p>\n</blockquote>\n<p>效果：</p>\n<pre class=\"mermaid\">graph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;</pre>\n\n<h6 id=\"12、注意\"><a href=\"#12、注意\" class=\"headerlink\" title=\"12、注意\"></a>12、注意</h6><p>Markdown简化了用户的操作，所以复杂的、花里胡哨需要Markdown和内嵌的Html语句相结合（比如：字体颜色，字体大小等）。一些流程图、目录也需要借助于其他的插件或者编辑器。没有万能的简单的语法，大家相结合使用高效快速的完成博客文档的编辑。<br>祝大家好运！</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck2aft5jv0000uwtk492dbwzh","category_id":"ck2aft5k10002uwtktkmq515u","_id":"ck2aft5k9000cuwtkld8oam9z"},{"post_id":"ck2aft5k8000auwtk66pb9vj0","category_id":"ck2aft5k10002uwtktkmq515u","_id":"ck2aft5kb000guwtktxuj2z6a"},{"post_id":"ck2aft5k00001uwtkwxhqjl3z","category_id":"ck2aft5k10002uwtktkmq515u","_id":"ck2aft5kb000huwtkcmw8cd5j"},{"post_id":"ck2aft5k40004uwtkg3kke400","category_id":"ck2aft5k10002uwtktkmq515u","_id":"ck2aft5kc000juwtkf30qoio5"},{"post_id":"ck2aft5kn000kuwtk1z40l3v9","category_id":"ck2aft5k10002uwtktkmq515u","_id":"ck2aft5ku000ruwtkb19vy3sl"},{"post_id":"ck2aft5kp000muwtknm5d7gmv","category_id":"ck2aft5k10002uwtktkmq515u","_id":"ck2aft5kv000tuwtkqjv2dnf7"}],"PostTag":[{"post_id":"ck2aft5jv0000uwtk492dbwzh","tag_id":"ck2aft5k30003uwtkojjzfxbw","_id":"ck2aft5k80009uwtkbijsnldh"},{"post_id":"ck2aft5k8000auwtk66pb9vj0","tag_id":"ck2aft5k60008uwtkliwzqipo","_id":"ck2aft5ka000euwtkarpnk4zw"},{"post_id":"ck2aft5k00001uwtkwxhqjl3z","tag_id":"ck2aft5k60008uwtkliwzqipo","_id":"ck2aft5kb000fuwtkqnemafq1"},{"post_id":"ck2aft5k40004uwtkg3kke400","tag_id":"ck2aft5k60008uwtkliwzqipo","_id":"ck2aft5kc000iuwtkyioh5wgw"},{"post_id":"ck2aft5kn000kuwtk1z40l3v9","tag_id":"ck2aft5k60008uwtkliwzqipo","_id":"ck2aft5ks000ouwtk9achbr12"},{"post_id":"ck2aft5kp000muwtknm5d7gmv","tag_id":"ck2aft5kt000quwtkmzn0j1ii","_id":"ck2aft5kw000uuwtktnvjdzva"}],"Tag":[{"name":"GitHubPages","_id":"ck2aft5k30003uwtkojjzfxbw"},{"name":"Java","_id":"ck2aft5k60008uwtkliwzqipo"},{"name":"Markdown","_id":"ck2aft5kt000quwtkmzn0j1ii"}]}}